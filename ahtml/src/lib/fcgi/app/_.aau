import console;
import fsys.file;
import fcgi.stream;
import fcgi.record;
import fcgi.app.status;
import fcgi.app.posts;
import fcgi.app.gets;
namespace fcgi;

var fPipe, pipeReader, pipeWriter;
var currentRequest = {};

var initEnv = function () {
	
}

var initPipe = function () {
	var hPipe = ..console.getInputHandle();
	assert(hPipe, "无效的管道句柄!");
	fPipe = ..fsys.file(hPipe, 'r+');
	assert(fPipe, "无效的管道句柄!");
	pipeReader = stream.reader(fPipe);
	pipeWriter = stream.writer(fPipe);
}

var init = function () {
	initEnv();
	initPipe();
}

var _accept = function () {
	// 首次调用 accept() 时
	// 初始化 pipeReader 和 pipeWriter
	if ( ! fPipe) initPipe();
	var processor = record.processor(currentRequest, pipeReader, pipeWriter);
	// 处理上一次 Record
	if (currentRequest.requestId) {
		processor.printRaw();
		processor.endRequest();
	}
	do {
		// BeginRequest Record
		var status = processor.nextRecord(1/*_FCGI_BEGIN_REQUEST*/);
		if (status !== app.status.BeginRecord) continue;
		// Params Record
		while (1) {
			var status = processor.nextRecord(4/*_FCGI_PARAMS*/);
			if ( status === null ) break;
			if ( status !== app.status.StreamRecord && status !== app.status.Skip ) continue 2;
		}
		// Stdin Record
		while (1) {
			var status = processor.nextRecord(5/*_FCGI_STDIN*/);
			if ( status === null ) break;
			if ( status !== app.status.StreamRecord && status !== app.status.Skip ) continue 2;
		}
		// 预处理完毕
		..io.stdout = {
			write = processor.print;
		}
		..io.stderr = {
			write = processor.printErr;
		}
		..io.print = function (...) {
			..io.stdout.write(...);
			..io.stdout.write('\r\n');
		}
		..request.server = ..table.mixin({}, currentRequest.paramsData);
		..request.post = {};
		if (currentRequest.paramsData["REQUEST_METHOD"] === "POST") {
			if (currentRequest.paramsData["HTTP_CONTENT_TYPE"] === "application/x-www-form-urlencoded") {
				..request.post = app.posts(currentRequest.stdinData);
			}
		}
		..request.get = app.gets(currentRequest.paramsData[["QUERY_STRING"]]);
	} while (0);
}

accept = function () {
	try {
		_accept();
	}
	catch (e) {
		// error(e);
	}
	return true;
}