import util.metaProperty;
import fcgi.app;
namespace fcgi;

FCGI_Header = class {
	ctor (t) {
		if (t) {
			this[["type"]] = t;
			select (t) {
				case 1/*_FCGI_BEGIN_REQUEST*/, 3/*_FCGI_END_REQUEST*/, 0xB/*_FCGI_UNKNOWN_TYPE*/
					this[["contentLengthB0"]] = 8;
			}
		}
	}
	BYTE version = 1;
	BYTE type;
	BYTE requestIdB1;
	BYTE requestIdB0;
	BYTE contentLengthB1;
	BYTE contentLengthB0;
	BYTE paddingLength;
	BYTE reserved;
	@_meta;
}
FCGI_Header._meta = ..util.metaProperty(
	requestId = {
		_set = function (v) {
			owner[["requestIdB1"]] = (v >> 8) & 0xFF;
			owner[["requestIdB0"]] = v & 0xFF;
		}
		_get = function () {
			return (owner[["requestIdB1"]] << 8) + owner[["requestIdB0"]];
		}
	}
	contentLength = {
		_set = function (v) {
			owner[["contentLengthB1"]] = (v >> 8) & 0xFF;
			owner[["contentLengthB0"]] = v & 0xFF;
		}
		_get = function () {
			return (owner[["contentLengthB1"]] << 8) + owner[["contentLengthB0"]];
		}
	}
);
var FCGI_Header = FCGI_Header;

FCGI_BeginRequestBody = class {
	BYTE roleB1;
	BYTE roleB0;
	BYTE flags;
	BYTE reserved[5];
	
	@_meta;
}
FCGI_BeginRequestBody._meta = ..util.metaProperty(
	role = {
		_set = function (v) {
			owner[["roleB1"]] = (v >> 8) & 0xFF;
			owner[["roleB0"]] = v & 0xFF;
		}
		_get = function () {
			return (owner[["roleB1"]] << 8) + owner[["roleB0"]];
		}
	}
);
var FCGI_BeginRequestBody = FCGI_BeginRequestBody;

FCGI_BeginRequestRecord = class {
	struct header = FCGI_Header(1/*_FCGI_BEGIN_REQUEST*/);
	struct body = FCGI_BeginRequestBody();
}

FCGI_EndRequestBody = class {
	BYTE appStatusB3;
	BYTE appStatusB2;
	BYTE appStatusB1;
	BYTE appStatusB0;
	BYTE protocolStatus;
	BYTE reserved[3];
	
	@_meta;
}
FCGI_EndRequestBody._meta = ..util.metaProperty(
	appStatus = {
		_set = function (v) {
			owner[["appStatusB3"]] = (v >> 24) & 0xFF;
			owner[["appStatusB2"]] = (v >> 16) & 0xFF;
			owner[["appStatusB1"]] = (v >> 8) & 0xFF;
			owner[["appStatusB0"]] = v & 0xFF;
		}
		_get = function () {
			return (owner[["appStatusB3"]] << 24) + (owner[["appStatusB2"]] << 16) +
			       (owner[["appStatusB1"]] << 8) + owner[["appStatusB0"]];
		}
	}
);
var FCGI_EndRequestBody = FCGI_EndRequestBody;

FCGI_EndRequestRecord = class {
	struct header = FCGI_Header(3/*_FCGI_END_REQUEST*/);
	struct body = FCGI_EndRequestBody();
}

FCGI_UnknownTypeBody = class {
	BYTE type; 
	BYTE reserved[7];
}
var FCGI_UnknownTypeBody = FCGI_UnknownTypeBody;

FCGI_UnknownTypeRecord = class {
	struct header = FCGI_Header(0xB/*_FCGI_UNKNOWN_TYPE*/);
	struct body = FCGI_UnknownTypeBody();
}

/**intellisense()
_FCGI_LISTENSOCK_FILENO=@0/*_FCGI_LISTENSOCK_FILENO*/
_FCGI_HEADER_LEN=@8/*_FCGI_HEADER_LEN*/
_FCGI_BEGIN_REQUEST=@1/*_FCGI_BEGIN_REQUEST*/
_FCGI_ABORT_REQUEST=@2/*_FCGI_ABORT_REQUEST*/
_FCGI_END_REQUEST=@3/*_FCGI_END_REQUEST*/
_FCGI_PARAMS=@4/*_FCGI_PARAMS*/
_FCGI_STDIN=@5/*_FCGI_STDIN*/
_FCGI_STDOUT=@6/*_FCGI_STDOUT*/
_FCGI_STDERR=@7/*_FCGI_STDERR*/
_FCGI_DATA=@8/*_FCGI_DATA*/
_FCGI_GET_VALUES=@9/*_FCGI_GET_VALUES*/
_FCGI_GET_VALUES_RESULT=@0xA/*_FCGI_GET_VALUES_RESULT*/
_FCGI_UNKNOWN_TYPE=@0xB/*_FCGI_UNKNOWN_TYPE*/
_FCGI_MAXTYPE=@0xB/*_FCGI_MAXTYPE*/
_FCGI_NULL_REQUEST_ID=@0/*_FCGI_NULL_REQUEST_ID*/
_FCGI_KEEP_CONN=@1/*_FCGI_KEEP_CONN*/
_FCGI_RESPONDER=@1/*_FCGI_RESPONDER*/
_FCGI_AUTHORIZER=@2/*_FCGI_AUTHORIZER*/
_FCGI_FILTER=@3/*_FCGI_FILTER*/
_FCGI_REQUEST_COMPLETE=@0/*_FCGI_REQUEST_COMPLETE*/
_FCGI_CANT_MPX_CONN=@1/*_FCGI_CANT_MPX_CONN*/
_FCGI_OVERLOADED=@2/*_FCGI_OVERLOADED*/
_FCGI_UNKNOWN_ROLE=@3/*_FCGI_UNKNOWN_ROLE*/
_FCGI_MAX_CONNS=@"FCGI_MAX_CONNS"
_FCGI_MAX_REQS=@"FCGI_MAX_REQS"
_FCGI_MPXS_CONNS=@"FCGI_MPXS_CONNS"
end intellisense**/