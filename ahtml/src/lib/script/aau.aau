namespace script.aau;

var toUTF8 = function (s) {
	return ..string.fromto(s, 0, 65001);
}

var errTemplate = /**
<!doctype html>
<html>
<head>
<meta charset="UTF-8">
</head>
<body>
<p>文件路径: %s</p>
<p>行号: %s</p>
<p>错误信息：</p><pre>%s</pre>
</body>
</html>
**/

var throw = function (filename, e) {
	var line = ..string.match(e, "line\:#(\d+)");
	e = rget( 2, ..string.match(e, "file\:([\s\S]+)<error\:>|<\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-[\s\r\n]+>(.+)") );
	..io.stderr.write( toUTF8( ..string.format(errTemplate, filename : "", line : "", e : "") ) );
	error("", -1);
}

run = function (ns, filename = "", code, args) {
	if (code === null) {
		var file = ..fsys.file(filename, "r");
		if ( ! file) {
			error( ..string.concat(filename, "不存在"), 3 );
		}
		code = file.read(-1);	
		file.close();
	}
	var f, err = loadcode(code);
	if (!f) throw(filename, err);
	var parentDir = ..fsys.getParentDir(filename);
	var preCurDir = ..fsys.getCurDir();
	..fsys.setCurDir(parentDir);
	var re, err = ..fiber.resume( ..fiber.create(f, ..request.server["DOCUMENT_ROOT"]), args );
	..fsys.setCurDir(preCurDir);
	if (!re && err !== "") throw(filename, err);
}

/*Import{{*/
import mysql;
/*}}*/