import win.ui;
_IMPORTURL["reportRl"] = "https://github.com/drunkenOstrich/reportRl/releases/latest/download/reportRl.tar.lzma"
import reportRl;
import reportRl.path;
/*DSG{{*/
mainForm = win.form(text="推式提供报表数据-Grid++Report例子 for aardio";right=427;bottom=201;border="dialog frame";max=false)
mainForm.add(
button={cls="button";text="打印预览";left=142;top=42;right=251;bottom=76;z=1};
button2={cls="button";text="退出";left=142;top=116;right=251;bottom=150;z=2}
)
/*}}*/

var report = reportRl();
assert(report,"报表组件创建失败！");

var fileName = reportRl.path.templatePath() + "program\ManualFillRecord.grf";
report.LoadFromFile(fileName);

report.FetchRecord = function(){
	/*在报表生成时且以推模式向报表提供数据，报表主对象请求数据时触发。*/
	var c1 = report.FieldByName("c1");
	
	var i1 = report.FieldByName("i1");
	
	var f1 = report.FieldByName("f1");
		
	
	report.DetailGrid.Recordset.Append();
	c1.AsString = "A";
	i1.AsInteger = 1;
	f1.AsFloat = 1.01;
	report.DetailGrid.Recordset.Post();
	
	report.DetailGrid.Recordset.Append();
	c1.AsString = "B";
	i1.AsInteger = 2;
	f1.AsFloat = 2.01;
	report.DetailGrid.Recordset.Post();
	
	report.DetailGrid.Recordset.Append();
	c1.AsString = "C";
	i1.AsInteger = 3;
	f1.AsFloat = 3.01;
	report.DetailGrid.Recordset.Post();
}

mainForm.button2.oncommand = function(id,event){
	//退出
	mainForm.close();
}
mainForm.button.oncommand = function(id,event){
	//打印预览
	report.PrintPreview(true);
}

mainForm.enableDpiScaling();
mainForm.show();

return win.loopMessage(); 
