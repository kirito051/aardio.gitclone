
namespace droson{
	import sqlite.aes128;
	import zlib.zip;
	import process;
	import string.template;
	import config;		
	//检测EXE是否运行在X:\xampp这样的文件夹下面
	mfr="上海瑞策软件"
	CurrentPath = ..io._exedir;
//	CurrentPath = "d:\xampp\";
	key=""
	website = "http://www.c3crm.com";

 	build= "20130626";
 	
	key ="";
	
	SqlFilePrefix = "crmdata";
	ZipFilePrefix = "crmfile";
	import sqlite.aes128;
	var sqlConn = sqlite.aes128("/data.db",key) 
 
	sqlConn.busy_timeout(10000)
	sqlConn.busy_handler( 
		function(strBack,count) {
			sleep(1);
			return count < 1000; /*重试次数*/
		},strBack
	)

	initDatabase = function(){
		if( not sqlConn.existsTable("task") ){  
			sqlConn.exec("create table task(
			url primary key,
			note,
			status,
			time_created TIMESTAMP DEFAULT (datetime('now','localtime')), 
			time_updated TIMESTAMP DEFAULT (datetime('now','localtime')), 
			time_finished TIMESTAMP DEFAULT (datetime('now','localtime')), 
			following_processing_time TIMESTAMP DEFAULT (datetime('now','localtime')), 
			gap integer default 5);")  
			sqlConn.exec("create index url on task (url)")
		} 
	}
		
	getLineSeparate = function(path){
		var file = ..io.open(path,"r+b")
		var line = file.read()	
		var cr = ..string.right(line,1) == '\r';
		file.close()
		if(cr){
			return "windows"
		}
		else {
			return "unix" 
		}
	}	
	
	PathDetection = function(){ 
		if(..io._exedir){
			var exe_path = CurrentPath;
			var pattern = //^\w\:\\xampp\\$
			var str = ..string.match(exe_path,pattern);
			if(str){
				return true; 
			}else {
				return false; 
			}			
		}
	}
	getDrive = function(){
		var pattern = //^(\w)\:\\xampp\\$
		var str = ..string.match(CurrentPath,pattern);
		return str;
	}
	getApachePort = function(){
		var ApachePortPath = CurrentPath + "apache\conf\httpd.conf";
		if(!..io.exist(ApachePortPath)){
			err = "Apache配置文件不存在"
			..win.msgboxErr(err ,mfr);
			return false; 
		} 
		
 		var StrApacheConfig = ..string.load(ApachePortPath);
		if(!StrApacheConfig){
			err = "Apache配置文件无法读取"
			..win.msgboxErr( err ,mfr);
			return false; 
		}
		
		var pattern = //\r\n\s*Listen\s*(\d{1,})\s*\r\n
		var ListenPort = ..string.match(StrApacheConfig,pattern);
		if(!ListenPort){
			err = "端口读取失败，建议联系我们手动修改。"
			..win.msgboxErr( err ,mfr);
			return false; 
		}
		return ListenPort; 
	}
	
	getMysqlPort = function(){
		var MysqlPortPath = CurrentPath + "mysql\bin\my.cnf";
		if(!..io.exist(MysqlPortPath)){
			err = "MYSQL配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false; 
		}
		LineSeparate = getLineSeparate(MysqlPortPath);
		if(LineSeparate ="windows"){
			PatternPort = //\r\n\s*port\s*?=\s*?(\d{1,})\s*\r\n
		}elseif(LineSeparate ="unix"){
			PatternPort = //\n\s*port\s*?=\s*?(\d{1,})\s*\n
		}else {
			err = "文件换行方式发现异常,请联系开发商"
			..win.msgboxErr( err ,mfr);
			return false; 
		}
		StrMysqlConfig = ..string.load(MysqlPortPath);
		if(!StrMysqlConfig){
			err = "Mysql配置文件无法读取";
			..win.msgboxErr( err ,mfr);
			return false;
		}
		MysqlPort = ..string.match(StrMysqlConfig,PatternPort);
		if(!MysqlPort){
			err = "Mysql端口读取错误"
			..win.msgboxErr( err ,mfr);
			return false;
		}
		return MysqlPort; 	
	}
	setApachePort = function(NewPort){
		NewApachePort = ..string.trim(NewPort);
		NewApachePort = ..string.match(NewApachePort,"^\d{1,}$");
		if(!NewApachePort){
			err = '请填写整数。\n \n如果您对此有疑问，请咨询我们的客服人员。'
			..win.msgboxErr( err ,mfr);
			return false;		
		}
		var ApachePortPath = CurrentPath + "apache\conf\httpd.conf";
		if(!..io.exist(ApachePortPath)){
			err = "Apache配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
 		StrApacheConfig = ..string.load(ApachePortPath);
		if(!StrApacheConfig){
			err = "Apache配置文件无法读取"
			..win.msgboxErr( err ,mfr);
			return false;	
		}
		..fsys.copy(ApachePortPath,ApachePortPath + "." + tostring(..time(,"%Y%m%d%H%M%S"))+".bak"); // 备份文件
		var pattern = //(\r\n\s*Listen\s*)(\d{1,})(\s*\r\n)
 		StrApacheConfig = ..string.replace(StrApacheConfig,pattern,"\1" + NewApachePort + "\3");	
 		var pattern = //(\r\n\s*ServerName \w*?\:\s*)(\d{1,})(\s*\r\n)
 		StrApacheConfig = ..string.replace(StrApacheConfig,pattern,"\1" + NewApachePort + "\3");	
 		..string.save(ApachePortPath, StrApacheConfig )
	}
	setMysqlPort = function(NewPort){
		NewMysqlPort = ..string.trim(NewPort);
		NewMysqlPort = ..string.match(NewMysqlPort,"^\d{1,}$");
		if(!NewMysqlPort){
			err = '请填写整数。\n \n如果您对此有疑问，请咨询我们的客服人员。'
			..win.msgboxErr( err ,mfr);
			return false;	
		}
		var MysqlPortPath = CurrentPath + "mysql\bin\my.cnf";
		if(!..io.exist(MysqlPortPath)){
			err = "MYSQL配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		}
		LineSeparate = getLineSeparate(MysqlPortPath);
		if(LineSeparate ="windows"){
			pattern = //(\r\n\s*port\s*?=\s*?)(\d{1,})(\s*\r\n)
		}elseif(LineSeparate ="unix"){
			pattern = //(\n\s*port\s*?=\s*?)(\d{1,})(\s*\n)
		}else {
			err = "文件换行方式发现异常,请联系开发商"
			..win.msgboxErr( err ,mfr);
			return false; 
		}
		StrMysqlConfig = ..string.load(MysqlPortPath);
		if(!StrMysqlConfig){
			err = "Mysql配置文件无法读取";
			..win.msgboxErr( err ,mfr);
			return false;
		}
		MysqlPort = ..string.match(StrMysqlConfig,PatternPort);
		if(!MysqlPort){
			err = "Mysql端口读取错误"
			..win.msgboxErr( err ,mfr);
			return false;	
		}
 		StrMysqlConfig = ..string.replace(StrMysqlConfig,pattern,"\1" + NewMysqlPort + "\3");
 		..fsys.copy(MysqlPortPath,MysqlPortPath + "." + tostring(..time(,"%Y%m%d%H%M%S"))+".bak"); // 备份文件
 		..string.save(MysqlPortPath, StrMysqlConfig )	
	}
	
	getMysqlPortInPhpMyAdminConfig = function(){
		PathPhpMyAdminConfig = CurrentPath + "phpMyAdmin\libraries\config.default.php";
		if(!..io.exist(PathPhpMyAdminConfig)){
			err = "phpMyAdmin配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
		StrPhpMyAdminConfig = ..string.load(PathPhpMyAdminConfig);
		pattern = //(\n\s*?\$cfg\[\'Servers'\]\[\$i\]\[\'port\'\]\s*?=\s*?\')(\d*?)(\'\s*?\;)
		strPrefix,MysqlPortInPhpMyAdminConfig,strSuffix  = ..string.match(StrPhpMyAdminConfig,pattern);
		if(!MysqlPortInPhpMyAdminConfig){
			err = "config.default.php Mysql端口读取错误"
			..win.msgboxErr( err ,mfr);
			return false;	
		}
		return MysqlPortInPhpMyAdminConfig; 
	}
	setMysqlPortInPhpMyAdminConfig = function(NewPort){
		NewMysqlPort = ..string.trim(NewPort);
		NewMysqlPort = ..string.match(NewMysqlPort,"^\d{1,}$");
		if(!NewMysqlPort){
			err = '请填写整数。\n \n如果您对此有疑问，请咨询我们的客服人员。'
			..win.msgboxErr( err ,mfr);
			return false;	
		}	
		PathPhpMyAdminConfig = CurrentPath + "phpMyAdmin\libraries\config.default.php";
		if(!..io.exist(PathPhpMyAdminConfig)){
			err = "phpMyAdmin配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
		StrPhpMyAdminConfig = ..string.load(PathPhpMyAdminConfig);
		pattern = //(\n\s*?\$cfg\[\'Servers'\]\[\$i\]\[\'port\'\]\s*?=\s*?\')(\d*?)(\'\s*?\;)
		strPrefix,MysqlPortInPhpMyAdminConfig,strSuffix  = ..string.match(StrPhpMyAdminConfig,pattern);
		..fsys.copy(PathPhpMyAdminConfig,PathPhpMyAdminConfig + "." + tostring(..time(,"%Y%m%d%H%M%S"))+".bak"); // 备份文件
		StrPhpMyAdminConfig = ..string.replace(StrPhpMyAdminConfig,pattern,"\1"+NewMysqlPort+"\3");
		..string.save(PathPhpMyAdminConfig,StrPhpMyAdminConfig )
	}	
	
/*CRM Mysql 端口{{*/
	getMysqlPortInCRMConfig = function(){
		PathCRMConfig = CurrentPath + "htdocs\config.inc.php";
		if(!..io.exist(PathCRMConfig)){
			err = "CRM配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
		StrCRMConfig = ..string.load(PathCRMConfig);
		pattern = //(\n\s*?\$dbconfig\[\'db\_port'\]\s*?=\s*?\'\:)(\d*?)(\'\s*?\;)
		strPrefix,MysqlPortInCRMConfig,strSuffix  = ..string.match(StrCRMConfig,pattern);
		 
		if(!MysqlPortInCRMConfig){
			err = "config.inc.php Mysql端口读取错误"
			..win.msgboxErr( err ,mfr);
			return false;	
		}
		return MysqlPortInCRMConfig; 
	}
	setMysqlPortInCRMConfig = function(NewPort){
		NewMysqlPort = ..string.trim(NewPort);
		NewMysqlPort = ..string.match(NewMysqlPort,"^\d{1,}$");
		if(!NewMysqlPort){
			err = '请填写整数。\n \n如果您对此有疑问，请咨询我们的客服人员。'
			..win.msgboxErr( err ,mfr);
			return false;	
		}	
		PathCRMConfig = CurrentPath + "htdocs\config.inc.php";
		if(!..io.exist(PathCRMConfig)){
			err = "CRM配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
		StrCRMConfig = ..string.load(PathCRMConfig);
		pattern = //(\n\s*?\$dbconfig\[\'db\_port'\]\s*?=\s*?\'\:)(\d*?)(\'\s*?\;)
		strPrefix,MysqlPortInCRMConfig,strSuffix  = ..string.match(StrCRMConfig,pattern);
		..fsys.copy(PathCRMConfig,PathCRMConfig + "." + tostring(..time(,"%Y%m%d%H%M%S"))+".bak"); // 备份文件
		StrCRMConfig = ..string.replace(StrCRMConfig,pattern,"\1"+NewMysqlPort+"\3");
		..string.save(PathCRMConfig,StrCRMConfig )
	}
	
	getSiteUrlPortInCRMConfig = function(){
		PathCRMConfig = CurrentPath + "htdocs\config.inc.php";
		if(!..io.exist(PathCRMConfig)){
			err = "CRM配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
		StrCRMConfig = ..string.load(PathCRMConfig);
		pattern = //(\n\s*?\$site\_URL\s*?=\s*?\'http\:\/\/localhost)(\:?)(\d*?)(\/\'\s*?\;\s*?\n)
		strPrefix,semicolon,PortInSiteURlInCrmConfig,strSuffix  = ..string.match(StrCRMConfig,pattern);
//		..io.print("前缀",strPrefix,"分号",semicolon,"端口",PortInSiteURlInCrmConfig,"后缀",strSuffix );
		if(semicolon="" and PortInSiteURlInCrmConfig=""){
			return "80"; 
		}elseif(semicolon=":" and PortInSiteURlInCrmConfig!=""){
			return PortInSiteURlInCrmConfig;	
		}else {
			err = "无法获取端口"
			..win.msgboxErr( err ,mfr);		
		}
	}	
	
	setSiteUrlPortInCRMConfig = function(NewPort){
		NewPort = ..string.trim(NewPort);
		NewPort = ..string.match(NewPort,"^\d{1,}$");
		if(!NewPort){
			err = '请填写整数。\n \n如果您对此有疑问，请咨询我们的客服人员。'
			..win.msgboxErr( err ,mfr);
			return false;	
		}	
		PathCRMConfig = CurrentPath + "htdocs\config.inc.php";
		if(!..io.exist(PathCRMConfig)){
			err = "CRM配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
		StrCRMConfig = ..string.load(PathCRMConfig);
		pattern = //(\n\s*?\$site\_URL\s*?=\s*?\'http\:\/\/localhost)(\:?)(\d*?)(\/\'\s*?\;\s*?\n)
		strPrefix,semicolon,PortInSiteURlInCrmConfig,strSuffix  = ..string.match(StrCRMConfig,pattern);
		..fsys.copy(PathCRMConfig,PathCRMConfig + "." + tostring(..time(,"%Y%m%d%H%M%S"))+".bak"); // 备份文件
		
		if(semicolon="" and PortInSiteURlInCrmConfig="" and NewPort="80"){
			//本身已经是80端口了 不做任何修改。
		}elseif(semicolon="" and PortInSiteURlInCrmConfig="" and NewPort!="80"){
			StrCRMConfig = ..string.replace(StrCRMConfig,pattern,"\1" +":" +NewPort+"\4");
			..string.save(PathCRMConfig,StrCRMConfig )		
		}
		elseif(semicolon=":" and PortInSiteURlInCrmConfig!=""){
			StrCRMConfig = ..string.replace(StrCRMConfig,pattern,"\1" +"\2" +NewPort+"\4");
			..string.save(PathCRMConfig,StrCRMConfig )
		}else {
			err = "无法获取htdocs\config.inc.php 中 $site_URL 端口"
			..win.msgboxErr( err ,mfr);		
		}		
		
		
		
	}
		
	getDriveInCRMConfig = function(){
		PathCRMConfig = CurrentPath + "htdocs\config.inc.php";
		if(!..io.exist(PathCRMConfig)){
			err = "CRM配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
		StrCRMConfig = ..string.load(PathCRMConfig);
		pattern = //(\n\s*?\$root\_directory\s*?\=\s*?\')(\w)(\:.*?\'\s*?\;)
		strPrefix,DriveInCRMConfig,strSuffix  = ..string.match(StrCRMConfig,pattern);
		if(!DriveInCRMConfig){
			err = "config.inc.php 盘符读取错误"
			..win.msgboxErr( err ,mfr);
			return false;	
		}
		return DriveInCRMConfig; 
	}	
	checkDriveInCRMConfig = function(){	
		var CurrentDrive = getDrive();
		PathCRMConfig = CurrentPath + "htdocs\config.inc.php";
		if(!..io.exist(PathCRMConfig)){
			err = "CRM配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		} 
		StrCRMConfig = ..string.load(PathCRMConfig);
		pattern = //(\n\s*?\$root\_directory\s*?\=\s*?\')(\w)(\:.*?\'\s*?\;)
		strPrefix,DriveInCRMConfig,strSuffix  = ..string.match(StrCRMConfig,pattern);
		if(!DriveInCRMConfig){
			err = "config.inc.php 盘符读取错误"
			..win.msgboxErr( err ,mfr);
			return false;	
		}
		if(DriveInCRMConfig!=CurrentDrive){
			..fsys.copy(PathCRMConfig,PathCRMConfig + "." + tostring(..time(,"%Y%m%d%H%M%S"))+".bak"); // 备份文件
			StrCRMConfig = ..string.replace(StrCRMConfig,pattern,"\1" + CurrentDrive + "\3");
			..string.save(PathCRMConfig,StrCRMConfig )
			..win.msgbox("已经自动修复" + "htdocs\config.inc.php"+ "盘符",mfr);	 
		}
	}	
/*}}*/	
/*启动时检查{{*/
	checkDriveInMysqlConfig = function(){
		var Flag = true;
		var CurrentDrive = getDrive();
  
		var MysqlPortPath = CurrentPath + "mysql\bin\my.cnf";
		if(!..io.exist(MysqlPortPath)){
			err = "MYSQL配置文件不存在"
			..win.msgboxErr( err ,mfr);
			return false;	
		}
	
		LineSeparate = getLineSeparate(MysqlPortPath);
		if(LineSeparate ="windows"){
			pattern = //(\r\n\s*port\s*?=\s*?)(\d{1,})(\s*\r\n)
		}elseif(LineSeparate ="unix"){
			pattern = //(\n\s*port\s*?=\s*?)(\d{1,})(\s*\n)
		}else {
			err = "文件换行方式发现异常,请联系开发商"
			..win.msgboxErr( err ,mfr);
			return false; 
		}
		StrMysqlConfig = ..string.load(MysqlPortPath);
		if(!StrMysqlConfig){
			err = "Mysql配置文件无法读取";
			..win.msgboxErr( err ,mfr);
			return false;
		}
		pattern = //(\n\s*socket\s*?=\s*?)(\w)(\:\/xampp\/mysql\/mysql\.sock\s*\n)
		prefixMatch,DriveInMysqlConfig,prefixMatch = ..string.match(StrMysqlConfig,pattern);
		if(..string.upper(CurrentDrive) != ..string.upper(DriveInMysqlConfig)){
			Flag = false;
			StrMysqlConfig = ..string.replace(StrMysqlConfig,pattern,"\1" + CurrentDrive + "\3");
		}		
	
		pattern = //(\n\s*basedir\s*?=\s*?)(\w)(\:\/xampp\/mysql\s*\n)
		prefixMatch,DriveInMysqlConfig,prefixMatch = ..string.match(StrMysqlConfig,pattern);
		if(..string.upper(CurrentDrive) != ..string.upper(DriveInMysqlConfig)){
			Flag = false;
			StrMysqlConfig = ..string.replace(StrMysqlConfig,pattern,"\1" + CurrentDrive + "\3");
		}
		
		pattern = //(\n\s*datadir\s*?=\s*?)(\w)(\:\/xampp\/mysql\/data\s*\n)
		prefixMatch,DriveInMysqlConfig,prefixMatch = ..string.match(StrMysqlConfig,pattern);
		if(..string.upper(CurrentDrive) != ..string.upper(DriveInMysqlConfig)){
			Flag = false;
			StrMysqlConfig = ..string.replace(StrMysqlConfig,pattern,"\1" + CurrentDrive + "\3");	
		}
					
		pattern = //(\n\s*tmpdir\s*?=\s*?)(\w)(\:\/xampp\/tmp\s*\n)
		prefixMatch,DriveInMysqlConfig,prefixMatch = ..string.match(StrMysqlConfig,pattern);
		if(..string.upper(CurrentDrive) != ..string.upper(DriveInMysqlConfig)){
			Flag = false;
			StrMysqlConfig = ..string.replace(StrMysqlConfig,pattern,"\1" + CurrentDrive + "\3");
		}
 	
		if(!Flag){
			..fsys.copy(MysqlPortPath,MysqlPortPath + "." + tostring(..time(,"%Y%m%d%H%M%S"))+".bak"); // 备份文件
			..string.save(MysqlPortPath, StrMysqlConfig )
			..win.msgbox("已经自动修复" + CurrentPath + "mysql\bin\my.cnf"+ "盘符",mfr);	 
		}		
	}
	
/*}}*/

	setNextProcessingTime = function(url,gap){
		var sqlConn = sqlite.aes128("/data.db",key) 
		sqlConn.busy_timeout(10000)
		URLActivity = sqlConn.getTable("select url,following_processing_time from task where  url='"+ url +"' limit 1");
		if(#URLActivity){
			..io.print(tostring(URLActivity[1]["following_processing_time"]));
			var following_processing_time = ..time(,"%Y-%m-%d %H:%M:%S").addsecond(gap);
 
    		sqlConn.busy_timeout(10000);	
			
			var command = sqlConn.prepare("update task SET following_processing_time=@following_processing_time where url=@url; ")
			command.bind.parameterByNamesAt(
				following_processing_time = following_processing_time;
				url =  url;
			)
			command.step(); 
			command.finalize() 
			sqlConn.close();
						
//			sqlConn.exec("update task SET following_processing_time='"+ tostring(following_processing_time) +"' where url='" + url + "';" )   			
		}
		sqlConn.close();
	}
 
	backupRoot = function(){
		var CurrentDrive = getDrive();
		var FileName = ZipFilePrefix + tostring(..time(,"%Y%m%d")) ;
		var zip = zlib.zip(config.backup.TargetFolder + "\" + FileName +".zip"  );
		zip.compress( CurrentDrive+":\xampp\htdocs",
    		function(len,path){
        		..io.print( len,path )
    		}
		)
		zip.close();
		return FileName; 
	}
	backupDatabase = function(){
		var CurrentDrive = getDrive();
		var FileName = SqlFilePrefix + tostring(..time(,"%Y%m%d")) ;
		//process.execute("mysqldump.exe","--default-character-set=utf8 -ubackupuser -pcrmone321 ecustomer -r d://l.sql",,"N","D:\xampp\mysql\bin")	
		strConn = /*--default-character-set=utf8 -u${username} -p${password} --port=${port} ${table} -r ${path}*/
		template = string.template( strConn )
		strConn = template.format(
    		username = config.backup.UserName;
    		password = config.backup.Password;
    		port = getMysqlPort();
    		table = config.backup.Database;
    		path = config.backup.TargetFolder + "\" + FileName +".sql"
		)
		MysqlFolder = CurrentDrive + ":\xampp\mysql\bin"
		process.execute_wait("mysqldump.exe",strConn ,,"N",MysqlFolder);
		return FileName; 
	}
	
}
