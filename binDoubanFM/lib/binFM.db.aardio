//db SQLite数据库
namespace binFM.db{
	import sqlite;
	import fsys.ini;
	import fsys;

	
 	//创建数据库和表
 	try{
 		..io.remove("\doubanFM_wubin.db-journal");
 		db = ..sqlite("\doubanFM_wubin.db");
	}

		
	/* 
 	 * 检查数据库
 	 * -- 创建数据库和表
 	 * -- 将旧版本的ini文件内容导入sqlite数据库
 	 */		
	checkDB = function() {
		if(!db) {
			..win.msgbox('发生错误！\r\n\r\n本软件可能被监控软件拦截，\r\n请检查后重试！',.._app);	
			..mainForm.close();	
		}
		
		..binFM.monitor.info("检查表");
		if(!db.existsTable("settings")){
			db.exec("CREATE TABLE settings(item PRIMARY KEY,value);");                              
		}		
		if(!db.existsTable("users")){
			db.exec("CREATE TABLE users(email,pass,name,cname,id PRIMARY KEY,liked,token,expire,gotTime);");                             
		}
		if(!db.existsTable("songs")){
			db.exec("CREATE TABLE songs(sid PRIMARY KEY,title,artist,albumTitle,albumUrl,lrc,offset,brief,cname,status,liked,cid,cTitle,genre,gotTime,userId);");                             
			//自1.1之后的版本，brief列无效，原brief列被移入albums表。SQLite中无法直接删除列。
		}
		if(!db.existsTable("artists")){
			db.exec("CREATE TABLE artists(artistId PRIMARY KEY,name,brief,photo,albums,fav);");
		}
		if(!db.existsTable("albums")){
			db.exec("CREATE TABLE albums(albumId PRIMARY KEY,title,brief,photo,artistId,artistName,fav);");
		}
		if(!db.existsTable("channels")){
			db.exec("CREATE TABLE channels(id PRIMARY KEY,name,fav);");
		}
		if(!db.existsTable("auto")){
			db.exec("CREATE TABLE auto(userId PRIMARY KEY,isLikeByTitle,likeTitle,isLikeByArtist,likeArtist,isLikeByAlbum,likeAlbum,isDelByTitle,delTitle,isDelByArtist,delArtist,isDelByAlbum,delAlbum,isDelEnglish);"); 
		}
		if(!db.existsTable("eq")){
			db.exec("CREATE TABLE eq(eqId PRIMARY KEY,eqName,eqData);"); 
		}
		
 		//将旧版本的ini文件内容导入sqlite数据库
		if(..io.exist("\doubanFM_wubin.ini")) {
			var ini = ..fsys.ini("\doubanFM_wubin.ini");
			
			..binFM.monitor.info("导入旧版ini文件内容");
			dbBegin();
			if(ini.read("settings","hk_next_a")) set("hk_next_a",ini.read("settings","hk_next_a"));
			if(ini.read("settings","hk_next_b")) set("hk_next_b",ini.read("settings","hk_next_b"));
			if(ini.read("settings","hk_back_a")) set("hk_back_a",ini.read("settings","hk_back_a"));
			if(ini.read("settings","hk_back_b")) set("hk_back_b",ini.read("settings","hk_back_b"));
			if(ini.read("settings","hk_play_a")) set("hk_play_a",ini.read("settings","hk_play_a"));
			if(ini.read("settings","hk_play_b")) set("hk_play_b",ini.read("settings","hk_play_b"));
			if(ini.read("settings","hk_like_a")) set("hk_like_a",ini.read("settings","hk_like_a"));
			if(ini.read("settings","hk_like_b")) set("hk_like_b",ini.read("settings","hk_like_b"));
			if(ini.read("settings","hk_del_a")) set("hk_del_a",ini.read("settings","hk_del_a"));
			if(ini.read("settings","hk_del_b")) set("hk_del_b",ini.read("settings","hk_del_b"));
			if(ini.read("settings","hk_lrc_a")) set("hk_lrc_a",ini.read("settings","hk_lrc_a"));
			if(ini.read("settings","hk_lrc_b")) set("hk_lrc_b",ini.read("settings","hk_lrc_b"));
			if(ini.read("settings","hk_front_a")) set("hk_front_a",ini.read("settings","hk_front_a"));
			if(ini.read("settings","hk_front_b")) set("hk_front_b",ini.read("settings","hk_front_b"));
			if(ini.read("settings","hk_exit_a")) set("hk_exit_a",ini.read("settings","hk_exit_a"));
			if(ini.read("settings","hk_exit_b")) set("hk_exit_b",ini.read("settings","hk_exit_b"));
			if(ini.read("settings","lrcOnStart")) set("lrcOnStart",ini.read("settings","lrcOnStart"));
			if(ini.read("settings","cnFont")) set("cnFont",ini.read("settings","cnFont"));
			if(ini.read("settings","enFont")) set("enFont",ini.read("settings","enFont"));
			if(ini.read("settings","lrcFontsize")) set("lrcFontsize",ini.read("settings","lrcFontsize"));
			if(ini.read("settings","lrcFontcolor1")) set("lrcFontcolor1",ini.read("settings","lrcFontcolor1"));
			if(ini.read("settings","lrcFontcolor2")) set("lrcFontcolor2",ini.read("settings","lrcFontcolor2"));	
			if(ini.read("settings","lrcPosY")) set("lrcPosY",ini.read("settings","lrcPosY"));
			if(ini.read("settings","aeroOnStart")) set("aeroOnStart",ini.read("settings","aeroOnStart"));
			if(ini.read("playing_status","volume")) set("volume",ini.read("playing_status","volume"));
			if(ini.read("playing_status","channelId")) set("channelId",ini.read("playing_status","channelId"));
			if(ini.read("settings","channelList_ext")) set("channelList_ext",ini.read("settings","channelList_ext"));			
			if(ini.read("settings","saveFolder")) set("saveFolder",ini.read("settings","saveFolder"));
			var id = 0;
			if(ini.read("user_info","userId")) id = ini.read("user_info","userId");
			..binFM.monitor.info("userId",id);
			set("userId",id);
			dbCommit();

			var email,pass,name,cname,liked,token,expire,gotTime = '','','','',100,'','','';
						
			if(ini.read("user_info","userEmail")) email = ini.read("user_info","userEmail");
			if(ini.read("user_info","userPass")) pass = ini.read("user_info","userPass");
			if(ini.read("user_info","userName")) name = ini.read("user_info","userName");
			if(ini.read("user_info","userLiked")) liked = ini.read("user_info","userLiked");
			if(ini.read("authority","token")) token = ini.read("authority","token");
			if(ini.read("authority","expire")) expire = ini.read("authority","expire");
			if(ini.read("authority","gotTime")) gotTime = ini.read("authority","gotTime");

			if(id && email && pass && name && liked && token && expire && gotTime) saveUser(email,pass,name,cname,id,liked,token,expire,gotTime);
		
			..io.remove("\doubanFM_wubin.ini");
		} // if(..io.exist("\doubanFM_wubin.ini"))
	}


	/* 
 	 * SQLite事务、关闭数据库
 	 */		
	dbBegin = function() {
		if(!db) return false;
		db.exec("BEGIN");
	}
	
	dbCommit = function() {
		if(!db) return false;
		db.exec("COMMIT");
	}
	
	close = function() {
		if(!db) return false;
		db.exec("VACUUM"); // 压缩优化数据库
		..sqlite.close();
	}	

	
	/* 
 	 * 读取或写入settings表
 	 */	
 	settingsCache = {};
	set = function(item_,value_) {
		if(!db) return false;
		if(!item_) return false;

		var i;
		if(item_ && value_==null) { // 读取settings表中的配置内容
			if(#settingsCache==0 || ..string.find(item_,"@@*")) { 
				// 将全部表缓存入数组，当item_参数含"*"时重新缓存 
				settingsCache = db.getTable("SELECT * FROM settings"); 
				item_ = ..string.replace(item_,"@@*","");
			}
			for(i=1;#settingsCache;1) {
				if(settingsCache[i]["value"]) settingsCache[i]["value"] = ..string.trim(settingsCache[i]["value"]);
				if(settingsCache[i]["item"]==item_) return settingsCache[i]["value"];
			}
			return false;
		}
		item_ = ..string.replace(item_,"@@*","");
		if(item_ && value_!=null) { // 写入settings表
			value_ = ..string.trim(tostring(value_));
			try{
				var command = db.prepare("REPLACE INTO settings VALUES(@item,@value);");
				command.bind.parameterByNamesAt(
					item = item_;
					value = value_;
				).step();
			}
			return; 
		}
	}

	
	/* 
 	 * 本地获取指定用户信息
 	 */		
	getUser = function(id) {
		if(!db) return false;

		if(!id || id=='') {
			..login = false;
			return false;
		}
		var result = db.stepQuery("SELECT * FROM users WHERE id='" ++ tostring(id)++"'"); 
		if(result==null) return false;
		return result["email"],result["pass"],result["name"],result["cname"],result["id"],result["liked"],result["token"],result["expire"],result["gotTime"];
	}
	
	
	/* 
 	 * 本地保存用户信息
 	 */		
	saveUser = function(email_,pass_,name_,cname_="",id_,liked_=100,token_,expire_,gotTime_) {
		if(!db) return false;
		
		if(email_ && email_!='') email_ = ..string.trim(email_);
		else return false;
		if(pass_ && pass_!='') pass_ = ..string.trim(pass_);
		else return false;
		if(name_ && name_!='') name_ = ..string.trim(name_);
		else return false;
		if(cname_) cname_ = ..string.trim(cname_);
		else return false;
		if(id_ && id_!='') id_ = ..string.trim(tostring(id_));
		else return false;
		if(token_ && token_!='') token_ = ..string.trim(token_);
		else return false;
		if(expire_ && expire_!='') expire_ = ..string.trim(tostring(expire_));
		else return false;
		if(gotTime_ && gotTime_!='') gotTime_ = ..string.trim(tostring(gotTime_));
		else return false;

		try {
			var command = db.prepare("REPLACE INTO users 
				VALUES(@email,@pass,@name,@cname,@id,@liked,@token,@expire,@gotTime);");
			command.bind.parameterByNamesAt(
				email = email_;
				pass = tostring(pass_);
				name = tostring(name_);
				id = tostring(id_);
				liked = tostring(liked_);
				token = tostring(token_);
				expire = tostring(expire_);
				gotTime = tostring(gotTime_);
			).step();
		}
		return; 
	}
	
	
	/* 
 	 * 记录歌曲信息
 	 */
 	recordSong = function(sid_,status_,lrc_='',genre_='',cname_='',offset_=0) {
 		if(!db) return false;
 		
 		var song = ..binFM.song(sid_);
  		if(..binFM.ui.html("#channel-name")) var cTitle_ = ..string.replace(..binFM.ui.html("#channel-name"),"@@MHz","");
 		else cTitle_ = "-";
 		var liked_ = song["like"];
 		if(status_==1) liked_ = 1;
 		if(status_==2 || status_==-2) liked_ = 0;
 		lrc_ = ..string.trim(lrc_);
 		if(lrc_=="[no_lyric]") lrc_='';
 		cname_ = ..string.trim(cname_);
 		genre_ = ..string.trim(genre_);
 		if(song["picture"]) photo_ = ..string.replace(song["picture"],"@@mpic","lpic");
 		var userId2 = tostring(..userId);
 		if(!userId2 || userId2=='') userId2 = '0';

		// 记录歌曲信息
		var result = db.stepQuery("SELECT lrc,offset,status,cname,genre,userId FROM songs WHERE sid='" ++ tostring(sid_)++"'");
		if(!result) {
			..binFM.monitor.info("添加记录",sid_);
			try {
				var command = db.prepare("INSERT INTO songs VALUES (@sid,@title,@artist,@albumTitle,@albumUrl,@lrc,@offset,@brief,@cname,@status,@liked,@cid,@cTitle,@genre,@gotTime,@userId);");
				command.bind.parameterByNamesAt(
					sid = tostring(sid_);
					title = song["title"];
					artist = song["artist"];
					albumTitle = song["albumtitle"];
					albumUrl = song["album"];
					status = tostring(status_);
					liked = tostring(liked_);
					cid = tostring(..channelId_now);
					cTitle = cTitle_;
					gotTime = tostring(tonumber(..time.now()));
					userId = tostring(userId2)++",";
				).step();
			}
			if(..tableFormShown) list(..wbLayout_table,"",..pageCurrent,..order);
			return;
		}
		else {
			..binFM.monitor.info("更新记录",sid_,status_);
			if(lrc_=='' && result["lrc"]) lrc_ = result["lrc"];
			if(cname_=='' && result["cname"]) cname_ = result["cname"];
			if(offset_==0 && result["offset"]) offset_ = result["offset"];
			if(genre_=='' && result["genre"]) genre_ = result["genre"];
			var song = ..binFM.song(sid_);
			if(song && song["clike"] && status_!=-2) status_ = song["clike"];
			var userId_ = result["userId"];
			if(!..string.find(userId_,"@"+userId2++",")) userId_ = result["userId"] ++ tostring(userId2) ++ ',';

			try {
				var command = db.prepare("UPDATE songs SET lrc=@lrc,offset=@offset,brief=@brief,cname=@cname,genre=@genre,liked=@liked,status=@status,gotTime=@gotTime,userId=@userId WHERE sid='" ++ tostring(sid_) ++ "';");
				command.bind.parameterByNamesAt(
					lrc = lrc_;
					offset = tostring(offset_);
					cname = cname_;
					genre = genre_;
					liked = tostring(liked_);
					status = tostring(status_);
					gotTime = tostring(tonumber(..time.now()));
					userId = userId_;
				).step();
			}	
			if(..tableFormShown) list(..wbLayout_table,"",..pageCurrent,..order);
			return result["lrc"],result["offset"],result["cname"];
		}
 	}
 	

	/* 
 	 * 记录歌曲信息
	 * 仅在..binFM.douban.getSongs()中使用
 	 */
	recordSong_like = function(song) {
		if(!db) return false;
		
		var sid_ = song["sid"];
 		var userId2 = tostring(..userId);
 		if(!userId2 || userId2=='') userId2 = '0';
		var result = db.stepQuery("SELECT userId FROM songs WHERE sid='" ++ tostring(sid_)++"'");
		if(!result) {
			..binFM.monitor.info("添加红心记录",sid_);
			try {			
				var command = db.prepare("INSERT INTO songs VALUES (@sid,@title,@artist,@albumTitle,@albumUrl,@lrc,@offset,@brief,@cname,@status,@liked,@cid,@cTitle,@genre,@gotTime,@userId);");
				command.bind.parameterByNamesAt(
					sid = tostring(sid_);
					title = song["title"];
					artist = song["artist"];
					albumTitle = song["albumtitle"];
					albumUrl = song["album"];
					status = '-99';
					liked = '1';
					cid = '-3';
					cTitle = '红心兆赫';
					gotTime = '0';
					userId = tostring(userId2)++",";
				).step();
			}
			return;
		}
		else {
			//..binFM.monitor.info("更新红心记录",sid_);
			var userId_ = result["userId"];
			if(!..string.find(userId_,userId2++",")) userId_ = result["userId"] ++ tostring(userId2) ++ ',';
			try {
				db.exec("UPDATE songs SET userId='" ++ userId_ ++ "' WHERE sid='" ++ tostring(sid_) ++ "';");
			}
			result = null;
			return;
		}	
	}	
 
	
	/*
	 * 记录艺术家信息
	 */
	saveArtist = function(id_,name_,photo_="",albums_="",brief_="",fav) {
		if(!db) return false;
		var flag = false;

		if(!id_ || id_=="" || !name_ || name_=="") return;
		if(!fav){
			var fav_;
			var result = db.stepQuery("SELECT fav FROM artists WHERE artistId='" ++ tostring(id_)++"'");
			if(result && result["fav"] && ..string.trim(result["fav"])!="") {
				fav_ = result["fav"];
				result = null;
			}
			else fav_ = "";
			try {
				var command = db.prepare("REPLACE INTO artists 
					VALUES(@artistId,@name,@brief,@photo,@albums,@fav);");
				command.bind.parameterByNamesAt(
					artistId = tostring(id_);
					name = tostring(name_);
					brief = brief_;
					photo = photo_;
					albums = albums_;
					fav = fav_;
				).step();
				..binFM.monitor.info("记录艺术家信息",id_);
				flag = true;
			}
		}
		else {
			var result,userId2,userId_;
			userId2 = tostring(..userId);
			if(!userId2 || userId2=='') userId2 = '0';
			if(id_) result = db.stepQuery("SELECT artistId,fav FROM artists WHERE artistId='" ++ tostring(id_)++"'");
			else if(name_) result = db.stepQuery("SELECT artistId,fav FROM artists WHERE name='" ++ name_++"'");
			if(result) {
				id_ = result["artistId"];
				if(fav=="fav") {
					userId_ = result["fav"];
					if(!..string.find(userId_,"@"++userId2++",")) userId_ = result["fav"] ++ tostring(userId2) ++ ",";
					..binFM.monitor.info("添加喜欢的歌手"++id_++",用户"++userId_);
				}
				else {
					if(result["fav"]) userId_ = ..string.replace(result["fav"],"@@"++userId2++",","");
					..binFM.monitor.info("移除喜欢的歌手,用户"++userId2);
				}
				try {
					db.exec("UPDATE artists SET fav='" ++ userId_ ++ "' WHERE artistId='" ++ tostring(id_) ++ "';");
					flag = true;
				}
				result = null;
			}
			else if(fav=="fav"){
				try {
					var command = db.prepare("REPLACE INTO artists 
						VALUES(@artistId,@name,@brief,@photo,@albums,@fav);");
					command.bind.parameterByNamesAt(
						artistId = tostring(id_);
						name = tostring(name_);
						brief = brief_;
						photo = photo_;
						albums = albums_;
						fav = tostring(userId2) ++ ",";
					).step();
					..binFM.monitor.info("记录艺术家信息",id_);
					flag = true;
				}			
			}
		}
		return flag;
	}
	
	
	/*
	 * 获取艺术家信息
	 */
	getArtist = function(name,artistId,fav) {
		if(!db) return false;
		
		var result={};
		if(fav) {
			var userId_;
			if(!..login || ..userId="") userId_ = 0;
			else userId_ = ..userId;
			var sql_ = "";
			var sqlWhere = "";
			sql_ = "SELECT * FROM artists WHERE fav LIKE'%" ++ userId_ ++ ",%' ";
			result = db.getTable(sql_);
			return result;
		}
		
		if(name && name!="") {
			result = db.stepQuery("SELECT * FROM artists WHERE name='" ++ name ++"'");
			if(result && result["artistId"] && result["name"]) {
				..binFM.monitor.info("从数据库中取出歌手信息by name");
				return result;
			}
		}
		
		if(artistId) {
			result = db.stepQuery("SELECT * FROM artists WHERE artistId='" ++ tostring(artistId) ++"'");
			if(result && result["artistId"] && result["name"]) {
				..binFM.monitor.info("从数据库中取出歌手信息by id");
				return result;
			}		
		}
		
		return false;
	}
	

	/* 
	 * 记录专辑信息
	 */
	saveAlbum = function(id_,title_,brief_="",photo_,artistId_="",artistName_,fav) {
		if(!db) return false;
		var flag = false;
		
		if(!id_ || id_=="" || !title_ || title_=="") return;
		if(!fav){
			var fav_;
			var result = db.stepQuery("SELECT fav FROM albums WHERE albumId='" ++ tostring(id_)++"'");
			if(result && result["fav"] && ..string.trim(result["fav"])!="") {
				fav_ = result["fav"];
				result = null;
			}
			else fav_ = "";
			try {
				var command = db.prepare("REPLACE INTO albums 
					VALUES(@albumId,@title,@brief,@photo,@artistId,@artistName,@fav);");
				command.bind.parameterByNamesAt(
					albumId = tostring(id_);
					title = tostring(title_);
					brief = brief_;
					photo = photo_;
					artistId = artistId_;
					artistName = artistName_;
					fav = fav_;
				).step();
				..binFM.monitor.info("记录专辑信息",id_);
				flag = true;
			}
		}
		else {
			var result,userId2,userId_;
			userId2 = tostring(..userId);
			if(!userId2 || userId2=='') userId2 = '0';
			if(id_) result = db.stepQuery("SELECT albumId,fav FROM albums WHERE albumId='" ++ tostring(id_)++"'");
			else if(title_) result = db.stepQuery("SELECT albumId,fav FROM albums WHERE title='" ++ title_++"'");
			if(result) {
				id_ = result["albumId"];
				if(fav=="fav") {
					userId_ = result["fav"];
					if(!..string.find(userId_,"@"++userId2++",")) userId_ = result["fav"] ++ tostring(userId2) ++ ",";
					..binFM.monitor.info("添加喜欢的专辑"++id_++",用户"++userId_);
				}
				else {
					if(result["fav"]) userId_ = ..string.replace(result["fav"],"@@"++userId2++",","");
					..binFM.monitor.info("移除喜欢的专辑,用户"++userId2);
				}
				try {
					db.exec("UPDATE albums SET fav='" ++ userId_ ++ "' WHERE albumId='" ++ tostring(id_) ++ "';");
					flag = true;
				}
				result = null;
			}
			else if(fav=="fav") {
				try {
					var command = db.prepare("REPLACE INTO albums 
						VALUES(@albumId,@title,@brief,@photo,@artistId,@artistName,@fav);");
					command.bind.parameterByNamesAt(
						albumId = tostring(id_);
						title = tostring(title_);
						brief = brief_;
						photo = photo_;
						artistId = artistId_;
						artistName = artistName_;
						fav = tostring(userId2) ++ ",";
					).step();
					..binFM.monitor.info("记录专辑信息",id_);
					flag = true;
				}
			}
		}
		return flag;
	}
	

	/*
	 * 获取专辑信息
	 */
	getAlbum = function(title,albumId,fav) {
		if(!db) return false;
		
		var result={};
		if(fav) {
			var userId_;
			if(!..login || ..userId="") userId_ = 0;
			else userId_ = ..userId;
			var sql_ = "";
			var sqlWhere = "";
			sql_ = "SELECT * FROM albums WHERE fav LIKE'%" ++ userId_ ++ ",%' ";
			result = db.getTable(sql_);
			return result;
		}
		
		if(title && title!="") {
			result = db.stepQuery("SELECT * FROM albums WHERE title='" ++ title ++"'");
			if(result && result["albumId"] && result["title"]) {
				..binFM.monitor.info("从数据库中取出专辑信息by title");
				return result;
			}
		}
		
		if(albumId) {
			result = db.stepQuery("SELECT * FROM albums WHERE albumId='" ++ tostring(albumId) ++"'");
			if(result && result["albumId"] && result["title"]) {
				..binFM.monitor.info("从数据库中取出专辑信息by id");
				return result;
			}		
		}
		return false;
	}
	

	/* 
	 * 收藏频道
	 */
	saveChannel = function(id_,name_,fav) {
		if(!db) return false;
		
		var result,userId2,userId_;
		userId2 = tostring(..userId);
		if(!userId2 || userId2=='') userId2 = '0';
		if(id_) result = db.stepQuery("SELECT id,fav FROM channels WHERE id='" ++ tostring(id_)++"'");
		else if(name_) result = db.stepQuery("SELECT id,fav FROM channels WHERE cname='" ++ name_ ++"'");
		if(result) {
			id_ = result["id"];
			if(fav=="fav") {
				userId_ = result["fav"];
				if(!..string.find(userId_,"@"++userId2++",")) userId_ = result["fav"] ++ tostring(userId2) ++ ",";
				..binFM.monitor.info("添加喜欢的频道"++id_++",用户"++userId_);
			}
			else {
				if(result["fav"]) userId_ = ..string.replace(result["fav"],"@@"++userId2++",","");
				..binFM.monitor.info("移除喜欢的频道,用户"++userId2);
			}
			try {
				db.exec("UPDATE channels SET fav='" ++ userId_ ++ "' WHERE id='" ++ tostring(id_) ++ "';");
				flag = true;
			}
			result = null;
		}
		else if(fav=="fav") {
			try {
				var command = db.prepare("REPLACE INTO channels 
					VALUES(@id,@cname,@fav);");
				command.bind.parameterByNamesAt(
					id = tostring(id_);
					cname = tostring(name_);
					fav = tostring(userId2) ++ ",";
				).step();
				..binFM.monitor.info("记录频道信息",id_);
				flag = true;
			}
		}
		return flag;	
	}
	
	
	/*
	 * 读取收藏的频道
	 */
	getChannel = function(id) {
		if(!db) return false;
	
		var result={};
		var userId_;
		if(!..login || ..userId="") userId_ = 0;
		else userId_ = ..userId;
		var sql_ = "";
		var sqlWhere = "";
		sql_ = "SELECT * FROM channels WHERE fav LIKE'%" ++ userId_ ++ ",%' ";
		result = db.getTable(sql_);
		return result;
	}
	
	
 	/* 
 	 * 显示歌曲记录列表
 	 */
	list = function(layout,keywords="",pageCurrent=1,order="gotTime DESC") {
		var userId_;
		if(!..login || ..userId="") userId_ = 0;
		else userId_ = ..userId;
		
		var itemPerPage = 20;

		if(!db) return false;
		
		..binFM.ui.html("#page_current",pageCurrent,layout);
		
		var sql_ = "";
		var sqlWhere = "";
		sql_ = "SELECT sid,title,artist,albumTitle,albumUrl,cname,status,liked,cid,cTitle,genre,gotTime FROM songs WHERE ";
		if(..string.len(keywords)>0){
			sqlWhere = "(title LIKE'%" ++ keywords ++ "%' OR artist LIKE'%" ++ keywords ++ "%' OR albumTitle LIKE'%" ++ keywords ++ "%') and ";
		}
		if(!..showLiked) sqlWhere += "gotTime!='0' AND ";
		else sqlWhere += "liked='1' AND ";
		sqlWhere += "userId LIKE'%" ++ userId_ ++ ",%' ";
		
		var offset = (pageCurrent-1) * itemPerPage;
		sql_ = sql_ ++ sqlWhere ++ "ORDER BY " ++ order ++ " LIMIT " ++ itemPerPage  ++ " OFFSET "++ offset;
       
		var countOfItems = db.getTable("SELECT COUNT(*) FROM songs WHERE " ++ sqlWhere)[1]["COUNT(*)"];
		if(!..showLiked) ..binFM.ui.html("#count",countOfItems,layout);
		else {
			..binFM.ui.html("#count_like",countOfItems,layout);
			//if(countOfItems>=50) ..userLiked = countOfItems;
		}
		var countOfPages = ..math.ceil(countOfItems / itemPerPage); 
		..binFM.ui.html("#page_count",countOfPages,layout);
        
        ..countOfPages = countOfPages;
        ..pageCurrent = pageCurrent;
        
        var result = db.getTable(sql_);
        ..binFM.ui.historyTable(result,layout);
	}
	
	
	/* 
 	 * 根据sid获取songs表中的内容
 	 */
	songDetail = function(sid,item) {
		if(db) var result = db.stepQuery("SELECT " ++ item ++ " FROM songs WHERE sid='" ++ tostring(sid)++"'");
		if(result) return result[item];
		else return false;
	}
	

	/* 
 	 * 根据userId获取auto表中的内容
 	 * -- 获取自动加红心、屏蔽 设置
 	 */
	getAuto = function() {
		var userId_;
		if(!..login || ..userId="") userId_ = 0;
		else userId_ = ..userId;
		
		if(db) var result = db.stepQuery("SELECT * FROM auto WHERE userId='" ++ tostring(userId_) ++ "';");
		if(result) {
			if(result["isLikeByTitle"]) ..isLikeByTitle = tonumber(result["isLikeByTitle"]);
			if(result["likeTitle"]) ..likeTitle = result["likeTitle"];
			if(result["isLikeByArtist"]) ..isLikeByArtist = tonumber(result["isLikeByArtist"]);
			if(result["likeArtist"]) ..likeArtist = result["likeArtist"];
			if(result["isLikeByAlbum"]) ..isLikeByAlbum = tonumber(result["isLikeByAlbum"]);
			if(result["likeAlbum"]) ..likeAlbum = result["likeAlbum"];
			if(result["isDelByTitle"]) ..isDelByTitle = tonumber(result["isDelByTitle"]);
			if(result["delTitle"]) ..delTitle = result["delTitle"];
			if(result["isDelByArtist"]) ..isDelByArtist = tonumber(result["isDelByArtist"]);
			if(result["delArtist"]) ..delArtist = result["delArtist"];
			if(result["isDelByAlbum"]) ..isDelByAlbum = tonumber(result["isDelByAlbum"]);
			if(result["delAlbum"]) ..delAlbum = result["delAlbum"];
			if(result["isDelEnglish"]) ..isDelEnglish = tonumber(result["isDelEnglish"]);
		}
		else {
			..isLikeByTitle = 1;..likeTitle = "";
			..isLikeByArtist = 1;..likeArtist = "";
			..isLikeByAlbum = 1;..likeAlbum = "";
			..isDelByTitle = 1;..delTitle = "";
			..isDelByArtist = 1;..delArtist = "";
			..isDelByAlbum = 1;..delAlbum = "";
			..isDelEnglish = 0;	
		}
		if(..isLikeByArtist==1) ..binFM.ui.menuToggle("#likeByArtist","normal");
		else ..binFM.ui.menuToggle("#likeByArtist","disabled2");
		if(..isLikeByAlbum==1) ..binFM.ui.menuToggle("#likeByAlbum","normal");
		else ..binFM.ui.menuToggle("#likeByAlbum","disabled2");
		if(..isDelByArtist==1) ..binFM.ui.menuToggle("#delByArtist","normal");
		else ..binFM.ui.menuToggle("#delByArtist","disabled2");
		if(..isLikeByAlbum==1) ..binFM.ui.menuToggle("#delByAlbum","normal");
		else ..binFM.ui.menuToggle("#delByAlbum","disabled2");
		if(..isDelEnglish==1) ..binFM.ui.menuToggle("#isDelEnglish","on");
		else ..binFM.ui.menuToggle("#isDelEnglish","off");
		
		if(..autoFormShown) ..binFM.ui.showAutoLikeDel();
	}
	
	
	/*
	 * 存储自动加红心、屏蔽 设置
	 */
	saveAuto = function() {
		var userId_;
		if(!..login || ..userId="") userId_ = 0;
		else userId_ = ..userId;
		
		if(!db) return false;
		try{
			var command = db.prepare("REPLACE INTO auto VALUES(@userId,@isLikeByTitle,@likeTitle,@isLikeByArtist,@likeArtist,@isLikeByAlbum,@likeAlbum,@isDelByTitle,@delTitle,@isDelByArtist,@delArtist,@isDelByAlbum,@delAlbum,@isDelEnglish);");
			command.bind.parameterByNamesAt(
				userId = tostring(userId_);
				isLikeByTitle = tostring(..isLikeByTitle);
				likeTitle = ..likeTitle;
				isLikeByArtist = tostring(..isLikeByArtist);
				likeArtist = ..likeArtist;
				isLikeByAlbum = tostring(..isLikeByAlbum);
				likeAlbum = ..likeAlbum;
				isDelByTitle = tostring(..isDelByTitle);
				delTitle = ..delTitle;
				isDelByArtist = tostring(..isDelByArtist);
				delArtist = ..delArtist;
				isDelByAlbum = tostring(..isDelByAlbum);
				delAlbum = ..delAlbum;
				isDelEnglish = tostring(..isDelEnglish);
			).step();
		}
		return;
	}
	

	/*
	 * 读取EQ设置
	 */
	getEQ = function() {
		if(db) var result = db.getTable("SELECT * FROM eq");
		if(result) {
			var i,j;

			for(i=1;#result;1){
				if(result[i]["eqData"]) {
					var eqId = tonumber(result[i]["eqId"]);
					if(..eqSetups[eqId]) {
						..eqSetups[eqId][1] = result[i]["eqName"];
						var eqData = ..string.split(result[i]["eqData"],";");
						for(j=1;11;1) ..eqSetups[eqId][j+1] = eqData[j];
					}
				}
			}
		}
		..binFM.monitor.info(..table.tostring(..eqSetups));
	}


	/*
	 * 存储EQ设置
	 */
	saveEQ = function(id) {
		if(!db) return;
		id = tonumber(id); // 必不可少
		
		var eqData_ = "";
		for(i=2;11;1) eqData_ = eqData_ ++ tostring(..eqSetups[id][i]) ++ ";"
		eqData_ = eqData_ ++ ..eqSetups[id][12];
		
		try {
			var command = db.prepare("REPLACE INTO eq 
				VALUES(@eqId,@eqName,@eqData);");
			command.bind.parameterByNamesAt(
				eqId = tostring(id);
				eqName = tostring(..eqSetups[id][1]);
				eqData = eqData_;
			).step();
			..binFM.monitor.info("记录EQ",id,eqSetups[eqId][1],eqData_);
		}
		
		set("eqId",id);
	} 
	 
	
	/*
	 * 清空数据库
	 * -- 清空表 songs, artists, albums, channels
	 */
	clear = function() {
		if(!db) return false;
		dbBegin();
		db.exec("DELETE FROM songs;");
		db.exec("DELETE FROM artists;");	
		db.exec("DELETE FROM albums;");	
		db.exec("DELETE FROM channels;");
		dbCommit();
		..binFM.monitor.info("清空表 songs, artists, albums, channels");
	}
}
