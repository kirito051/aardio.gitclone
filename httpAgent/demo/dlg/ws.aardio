import win.ui;
import web.json;
/*DSG{{*/
var winform = win.form(text="WebSocket Test";right=924;bottom=709)
winform.add(
Message={cls="edit";left=15;top=513;right=810;bottom=686;edge=1;hscroll=1;multiline=1;vscroll=1;z=10};
connectBtn={cls="button";text="连接";left=552;top=23;right=641;bottom=47;z=6};
disconectBtn={cls="button";text="断开";left=820;top=516;right=909;bottom=552;z=11};
groupbox={cls="groupbox";text="WebSocket Request";left=9;top=6;right=919;bottom=57;edge=1;z=2};
groupbox2={cls="groupbox";text="Websocket List";left=9;top=62;right=918;bottom=241;edge=1;z=7};
groupbox3={cls="groupbox";text="Message History";left=9;top=244;right=918;bottom=698;edge=1;z=1};
historyList={cls="edit";left=16;top=265;right=909;bottom=505;edge=1;hscroll=1;multiline=1;readonly=1;vscroll=1;z=9};
method={cls="combobox";left=475;top=25;right=539;bottom=45;disabled=1;edge=1;items={"GET";"POST";"OPTION"};mode="dropdownlist";z=5};
sendMsgBtn={cls="button";text="发送";left=818;top=645;right=909;bottom=681;z=12};
static={cls="static";text="URL：";left=22;top=27;right=61;bottom=48;transparent=1;z=3};
url={cls="combobox";left=64;top=25;right=463;bottom=45;edge=1;items={"ws://hlydesign.cn"};mode="dropdown";z=4};
websocketView={cls="listview";left=16;top=84;right=909;bottom=230;edge=1;fullRow=1;msel=false;z=8}
)
/*}}*/

var WebSocketListColumn = {
    {name = "序号";width = 40;style = 0x2/*_LVCFMT_CENTER*/;fields = null};
	{name = "URL";width = 200;style = 0x0/*_LVCFMT_LEFT*/;fields = "path"};
	{name = "状态";width = 40;style = 0x0/*_LVCFMT_LEFT*/;fields = "statue"};
	{name = "开始时间";width = 90;style = 0x2/*_LVCFMT_CENTER*/;fields = "initTime";};
	{name = "持续时间";width = 90;style = 0x2/*_LVCFMT_CENTER*/;fields = "last";};
}

var listViewInit = function(oListView,list){
	for index = 1;#list;1{
		oListView.insertColumn(
				list[index].name,
				list[index].width,,
				null,
				list[index].style
			);
	}
}

eachTask = class {
	ctor( url,guid,index ){
		this.websocket = obj;
		this.url = url;
		this.guid = guid;
		this.index = index;
		this.initTime = 0;
		this.lastTime = 0;
		this.statue = 0;
		this.history = {}
	};
	setSocket = function(wsTask){
		this.websocket = wsTask;
		this.initTime = ..time();
		this.statue = 1;
	}
	getSocket = function(){
		return this.websocket; 
	}
	refreshTime = function(){
		this.lastTime = (tonumber(..time()) - tonumber(this.initTime));
	}
	setError = function(statue){
		this.statue = statue;
	}
	setClose = function(enOperation,errCode){
		this.refreshTime();
		this.statue = -1;
		..table.push(this.history,{
			["type"] = "Close";
			message  = text;
			time = ..time();
		})
	}
	getStatue = function(){
		if (this.statue == 1) this.refreshTime();
		return this.statue,this.initTime,this.lastTime; 
	}
	sendMessage = function(text){
		..table.push(this.history,{
			["type"] = "Send";
			message  = text;
			time = ..time();
		});
		return text; 
	}
	onMessage = function(message){
		..table.push(this.history,{
				["type"] = "Recv";
				message  = message.data;
				time = ..time();
			})
	}
	getMessage = function(){
		return this.history; 
	}
	
}

var websocketList = {
    count = 0;
	["add"] = function(url,guid){
		owner.count += 1;
		var index = owner.count;
		var task = ..eachTask(url,guid,index);
		owner[index] = task;
		return index; 
	}
	["getStatue"] = function(index){
		var list = {};
		var statue,init,last;
		//..console.log(index:1,index:#owner)
		for i=(index:1);(index:#owner);1{
			statue,init,last = owner[i].getStatue();
			list[i] = {
				statue = statue;
				initTime = init;
				last = last;
			}
		}
		return list; 	
	}
	["findIndex"] = function(guid){
		for i=1;#owner;1{
			if (owner[i].guid == guid)	return i; 	
		}
		return 0; 
	}
	
}


var selectionTask = function(){
	var index = winform.websocketView.getSelection();
	if !index return ;
	return websocketList[index]; 
}

var updateLine = function(data,columnlist){
    for index,task in data{
        for key,value in task{
        	for i=1;#columnlist;1{
            	if columnlist[i].fields == key {
					winform.websocketView.setItemText(tostring(value),index,i);
					continue 2;
				}
			}
		}
	}
	var task = selectionTask();
	if task{
		if (winform.historyList.text != web.json.stringify(task.getMessage(),true))
			winform.historyList.text = web.json.stringify(task.getMessage(),true)
	}
	else {
		winform.historyList.text = "";
	}
	
	winform.historyList.text = (task)?web.json.stringify(task.getMessage(),true):""	;
}

winform.connectBtn.oncommand = function(id,event){
	var url = winform.url.text;

	if (!#url) return win.msgbox("请输入网址","请求错误",0x40/*_MB_ICONINFORMATION*/,winform.hwnd); 
	
	var guid,task = winform.client.getRequest(url,winform.onUpgrade,,,,true);
	var index = websocketList.add(url,guid)
	winform.websocketView.addItem({index;url})
	updateLine(websocketList.getStatue(index),WebSocketListColumn);
}

winform.onUpgrade = function(statue,wsTask,enOperation,errCode,exist){
    //..console.log(statue,enOperation,errCode,exist)
    var index,task;
	if statue = 4{//成功返回wsTask对象
		//console.dump(wsTask)
		index = websocketList.findIndex(wsTask.task.guid);
		task = websocketList[index];
		task.setSocket(wsTask)
		//绑定回调事件
		wsTask.onWsMessage = task.onMessage;
		wsTask.onClose 		= task.setClose;
	}
	else {//失败返回task对象
		//console.dump(wsTask)
		index = websocketList.findIndex(wsTask.guid);
		task = websocketList[index];
		task.setError(statue);
	}
	updateLine(websocketList.getStatue(index),WebSocketListColumn)
}

tmid = winform.addtimer(
	2000/*毫秒*/,
	function(hwnd,msg,id,tick){//定时执行代码
		updateLine(websocketList.getStatue(),WebSocketListColumn)
	}
);

winform.disconectBtn.oncommand = function(id,event){
	var wsTask = selectionTask();
	if !wsTask return ;
	wsTask.websocket.close(); 
}

winform.sendMsgBtn.oncommand = function(id,event){
	var wsTask = selectionTask();
	if !wsTask return ;
	//记录并发送数据
	var statue = wsTask.websocket.send(
		wsTask.sendMessage(winform.Message.text)
	)
	winform.Message.text = string.concat("Send Statue:" ,tostring(statue));
}

listViewInit(winform.websocketView,WebSocketListColumn)

winform.show();
win.loopMessage();
return winform;