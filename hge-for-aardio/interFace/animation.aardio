//animation 动画
namespace hge.interFace;
animation = class {
	ctor( game,tex,x,y,w,h,fps = 100 ){	
		this = game.sprite(tex,x,y,w,h);
		this.type = "animation";
		this.mode = 1;
		var tw,th = tex.width(true),tex.height(true);
		var nw,nh = ..math.round(tw/w),..math.round(th/h);
		var count,cf,stop = nw*nh,0,true;
	};
	play = function(loop = false){
		if(loop) this.mode = 2;
		stop = false;
	}
	
	stop = function(){
		stop = true;
	}
	isPlay = function(){
		return !stop; 
	}
	gotoAndPlay = function(n,loop = false){
		if(loop) this.mode = 2;
		stop = false;
		cf = n;
	}
	
	setFrame = function(n){
		cf = n;
	}
	
	(
		function(){
			this.on(2/*_hge_event_render*/,function(){
				if stop return ; 
				
				..hge.delyTime(this,fps,function(){
	
					select(this.mode) {
						case 1 {
							if(cf >= count) return ; 
							cf++;
						
						}
						case 2 {
							if(cf >= count) cf = 1;
							cf++;
						}
						case 3 {
							if(cf <= count) return ; 
							cf--;
						}
						case 4 {
							if(cf <= count) cf = 1;
							cf--;
							
						}
					}
					var ws_n,last = ..math.floor((cf-1)/nw),(cf-1)%nw;
					this.setTextureRect(w*last,h*ws_n,w,h)
				}
				)
			})
		}
	)()
	
}

namespace animation{

}

/**intellisense() 
	game = !hgeEngine. 
end intellisense**/






/**intellisense() 
!hgeAnimation.render() = 将精灵渲染到屏幕上
!hgeAnimation.renderEx(.(x,y,旋转弧度,水平缩放因子,垂直缩放因子) = 将缩放并旋转后的精灵渲染到屏幕上
!hgeAnimation.renderStretch(.(x1,y1,x2,y2) = 将精灵进行伸展后渲染到屏幕上
!hgeAnimation.render4V(.(x0,y0,x1,y1,x2,y2,x3,y3) = 将精灵渲染到屏幕上的任意quad中
!hgeAnimation.setTexture(__/*纹理*/) = 改变精灵的纹理
!hgeAnimation.setTextureRect(.(x,y,w,h) = 设置供精灵使用的纹理区域
!hgeAnimation.setColor(__/*颜色*/) = 为指定的顶点或整个精灵设置色彩和透明度
!hgeAnimation.setZ(__/*Z序*/) = 	为指定的顶点或整个精灵设置Z序
!hgeAnimation.setBlendMode = @.setBlendMode(_BLEND__)
!hgeAnimation.setHotSpot(.(x,y) = 设置精灵的锚点
!hgeAnimation.setFlip(.(是否水平翻转,是否垂直翻转) = 水平和/或垂直翻转精灵

!hgeAnimation.getTexture() = 返回当前精灵的纹理
!hgeAnimation.getTextureRect() = 返回精灵使用的当前纹理区域(x,y,w,h四个返回值)
!hgeAnimation.getColor() = 返回指定的精灵顶点颜色
!hgeAnimation.getZ() = 返回指定的精灵顶点Z序(Z-order)
!hgeAnimation.getBlendMode() = 返回当前字体的混合模式
!hgeAnimation.getHotSpot() = 返回精灵的锚点(hotX,hotY两个返回值)
!hgeAnimation.getFlip() = 返回当前精灵的翻转(flipX,flipY两个返回值)
!hgeAnimation.update() = 更新
!hgeAnimation.getWidth() = 返回精灵的宽度
!hgeAnimation.getHeight() = 返回精灵的高度
!hgeAnimation.getBoundingBox(.(x,y) = 返回精灵的边界
!hgeAnimation.getBoundingBox() = !hgeRect.
!hgeAnimation.getBoundingBoxEx(.(x,y,旋转弧度,水平缩放因子,垂直缩放因子) = 返回精灵的边界\n!hgeRect.
!hgeAnimation.rect = 返回精灵的边界\n!hgeRect.
!hgeAnimation.model = 播放模式整数 1顺序只播放一次 2顺序播放并循环 3倒放一次 4倒放循环
!hgeAnimation.x = x坐标
!hgeAnimation.y = y坐标
end intellisense**/