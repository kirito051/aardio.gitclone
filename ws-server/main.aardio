import win.ui;
import win.timer;
import win.ui.tooltip;
import win.clip;
import win.ui.statusbar;
/*DSG{{*/
winform = win.form(text="ws-server v0.0.3";right=959;bottom=591;border="thin";max=false)
winform.add(
board_btn={cls="button";text="广播消息";left=613;top=95;right=693;bottom=123;disabled=1;z=12};
clear_btn={cls="button";text="清空消息";left=210;top=6;right=290;bottom=34;z=11};
combobox={cls="combobox";left=580;top=64;right=726;bottom=90;edge=1;items={};mode="dropdown";z=7};
edit_port={cls="edit";text="9884";left=52;top=9;right=102;bottom=33;edge=1;z=2};
edit_time={cls="edit";text="1";left=793;top=62;right=838;bottom=87;align="center";edge=1;font=LOGFONT(h=-14);num=1;z=15};
groupbox={cls="groupbox";text="发送消息";left=518;top=45;right=953;bottom=565;edge=1;z=1};
groupbox2={cls="groupbox";text="服务器消息";left=13;top=45;right=511;bottom=565;edge=1;z=8};
msg_list={cls="listbox";left=18;top=62;right=505;bottom=564;edge=1;hscroll=1;items={};vscroll=1;z=9};
plusWebSite={cls="plus";left=925;top=8;right=947;bottom=30;background="\res\gitee.png";notify=1;z=17};
sendBtn={cls="button";text="发送消息";left=527;top=95;right=607;bottom=123;disabled=1;z=6};
send_richedit={cls="richedit";left=523;top=128;right=947;bottom=558;edge=1;multiline=1;z=5};
startBtn={cls="button";text="启动服务器";left=111;top=6;right=191;bottom=34;z=4};
static={cls="static";text="端口：";left=13;top=13;right=53;bottom=33;transparent=1;z=3};
static2={cls="static";text="客户端：";left=527;top=68;right=592;bottom=85;transparent=1;z=10};
static3={cls="static";text="定时：";left=754;top=67;right=800;bottom=84;transparent=1;z=14};
static4={cls="static";text="秒";left=839;top=69;right=863;bottom=86;transparent=1;z=16};
time_btn={cls="button";text="启动定时";left=701;top=95;right=781;bottom=123;disabled=1;z=13}
)
/*}}*/

if(_ARGV.opt){
	winform.edit_time.print(_ARGV.opt,_ARGV[#_ARGV]);
}

import web.socket.server;
var wsrv = web.socket.server();
var socket_list = {}
var is_timer = false
var timer = win.timer()

timer.onTimer = function(){
	if(!is_timer) {
		return ;
	} 
	
	sendMsg(winform.combobox.text, winform.send_richedit.text)
}

// 先禁用定时器
timer.disable()

var tooltipCtrl = win.ui.tooltip(winform);
tooltipCtrl.addTool(winform.plusWebSite, '查看新版本');
win.ui.statusbar( winform ).addItem("测试")
function sendMsg(host, msg){
	if (msg == '') {
		win.msgbox('请不要发送空的消息', '提示')
		return
	}
	
	if(string.trim(host) == '') {
		win.msgbox('警告', '请选择客户端')
		return ; 
	}
	
	wsrv.send(socket_list[host], msg)
	var message = string.format('发送给客户端%s的消息：%s', host, msg)
	winform.msg_list.add(message)
}

function sendPublishMsg(msg){
	if (msg == '') {
		win.msgbox('请不要发送空的消息', '提示')
		return
	}
	
	wsrv.publish(msg)
	var message = string.format('发送给所有客户端的消息：%s', msg)
	winform.msg_list.add(message)
}

//一个客户端连接过来了
wsrv.onOpen = function(hSocket){
	var host_ip, host_port = wsrv.getRemoteIp(hSocket)
	var socket_uid = string.format('%s:%s', host_ip, host_port)
    socket_list[socket_uid] = hSocket
    winform.combobox.add(socket_uid)
    winform.board_btn.disabled = false
    
    var msg = string.format('客户端%s连接成功', socket_uid)
    winform.msg_list.add(msg)
}

function disconnect(hSocket) {
	var host_ip, host_port = wsrv.getRemoteIp(hSocket);
	var socket_uid = string.format('%s:%s', host_ip, host_port)
	socket_list[socket_uid] = null

	// 如果在定时发送中，并且发送IP与断开IP相同，就停止定时器，并恢复按钮状态
	if (is_timer && socket_uid == winform.combobox.text) {
		is_timer = false
		winform.time_btn.text = '启动定时'
		winform.edit_time.disabled = false
		winform.sendBtn.disabled = false
		winform.board_btn.disabled = false
		timer.disable()
	}
	
	winform.combobox.clear()
	for(k,v in socket_list){
		winform.combobox.add(k)
	}
	
	var msg = string.format('客户端%s断开连接', socket_uid)
	winform.msg_list.add(msg)
}

//一个客户端掉线了
wsrv.onClose = function(hSocket,event){
	disconnect(hSocket)
}

//一个客户端出错了
wsrv.onError = function(hSocket,err){
	disconnect(hSocket)
}

//一个客户端发消息过来了
wsrv.onMessage = function(hSocket,msg){
	var client = wsrv.client(hSocket);
	var message = string.format('收到客户端%s的消息：%s', client.getRemoteIp(), msg.data)
	winform.msg_list.add(message)
}

winform.startBtn.oncommand = function(id,event){
	if (winform.startBtn.text == '启动服务器') {
		if (wsrv.start(, tonumber(winform.edit_port.text))) {
			winform.startBtn.text = '关闭服务器'
			winform.msg_list.add(string.format('%s 已启动WebSocket服务器', wsrv.getUrl(_, true)))
			winform.statusbar.setText("服务器启动成功")
		} else {
			winform.msg_list.add('启动失败，建议修改端口号')
			winform.statusbar.setText("服务器启动失败")
		}
	} else {
		wsrv.stop()
		winform.combobox.clear()
		winform.startBtn.text = '启动服务器'
		winform.msg_list.add('服务器已关闭')
		winform.statusbar.setText("服务器已关闭")
	}
}

winform.sendBtn.oncommand = function(id,event){
	sendMsg(winform.combobox.text, winform.send_richedit.text)
}

winform.onClose = function(hwnd,message,wParam,lParam){
    wsrv.stop()
    winform.sendBtn.disabled = true
    winform.board_btn.disabled = true
    winform.time_btn.disabled = true
}

winform.clear_btn.oncommand = function(id,event){
	winform.msg_list.clear()
}

winform.board_btn.oncommand = function(id,event){
	is_publish = !is_publish
	sendPublishMsg(winform.send_richedit.text)
}

winform.time_btn.oncommand = function(id,event){
	var interval = tonumber(winform.edit_time.text)
	if (interval <= 0) {
		winform.msg_list.add('请输入正确的时间数值')
		return ; 
	}
	
	is_timer = !is_timer
	if (is_timer) {
		winform.time_btn.text = '定时中...'
		winform.edit_time.disabled = true
		winform.sendBtn.disabled = true
		winform.board_btn.disabled = true
		timer.enable(interval * 1000)
	} else {
		winform.time_btn.text = '启动定时'
		winform.edit_time.disabled = false
		winform.sendBtn.disabled = false
		winform.board_btn.disabled = false
		timer.disable()
	}
}

winform.combobox.oncommand = function(id,event){
	var text = owner.selText;
	if (event == 9/*_CBN_SELENDOK*/) {
		winform.sendBtn.disabled = false
		winform.time_btn.disabled = false
	}
	//无返回值则继续调用默认回调函数
}

winform.plusWebSite.onMouseClick = function(wParam,lParam){
	import process;
	process.openUrl("https://gitee.com/small_bud_star/ws-server/releases");
}

winform.msg_list.onDoubleClickItem = function(){
	win.clip.write(owner.selText)
	winform.statusbar.setText("内容已经复制到剪切板")
	win.msgbox(owner.selText, '消息内容')
}

winform.show();
return win.loopMessage();