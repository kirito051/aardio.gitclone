import win.ui;
/*DSG{{*/
mainForm = win.form(text="坐席客户端";right=703;bottom=139;border="thin";max=false;mode="popup";topmost=1)
mainForm.add()
/*}}*/

//导入包
import web.form;
import win.ui.menu;
import win.ui.atom;
import win.util.tray;
import fsys.ini;
import web.form.util
import fsys.ini;
import sys
import inet.http; 
import inet.httpStatusCode; 
import console
import com.activeX;
import internationalData;
import constant;
import mouse.hook;
import process.admin;
import web.script;

//声明变量
var setting_pass = "123";//从配置文件读取出来的打开设置界面的密码
var shutdown_timer; //定时关机的定时器
var loginUrl;//浏览器打开的登录页
var homeUrl;//登录成功后的主页
var baseUrl;//只包含到端口号的基础地址
var lastHttpStatus;//最后一次检测服务的状态结果
var tips_winfrom,tips_wbs;//消息提示窗口
var server_isok = 0;//服务端状态
var is_frist_open = 1;//是否是首次打开主页
var lefttop_click_count = 0;//左上角设置按钮总共点击的次数
var last_click_time;//最后一次点击的时间
var wb_is_navigating=false;//浏览器处于刷新中
var child_set;//设置框
var passWin;//输入密码框

var maxTabY = 0;
var minTabY = -5;
var maxTabX = 0;
var minTabX = 0;
var startHeight = mainForm.height;
//mainForm.height = 5;
var touchHeight = 5;//触摸的高度
var isMouseTab = false;
var mouseHookFunction;
var isTrayClick = false;//托盘双击
var baseUrl = "http://www.gzhonyi.com";
var viewZoom = 1;
var windowWidth;
var windowHeight;

var menu = win.ui.menu(mainForm);//创建主菜单
var mouseHook = mouse.hook();
//创建web窗体
var wb = web.form( mainForm
				,0x4/*_UIFLAG_NO3DBORDER*/|0x8/*_UIFLAG_SCROLL_NO*/|0x1/*_UIFLAG_DIALOG*/
				) 
wb.noScriptErr = true;//屏蔽网页的错误提示
wb.showMenu = function(x,y,id,ele){
	/*定义此事件函数则禁用默认的右键弹出菜单*/
	return false;
}

var atom,hwnd/*冲突窗口的句柄,该函数会自动激活此窗口*/ = mainForm.atom("95DFF771-9708-4C25-BA84-806B549F2ED6");
if(!atom){
	/*为窗口设置原子值可以避免一个程序重复运行多个实例*/
	win.quitMessage();	return;
}

/*
var isAdmin,isXp = process.admin.isRunAs()
if(!isAdmin and !isXp){
	//mainForm.msgbox(internationalData.getValue("noPermission")) 
	//winform.close()
}
*/

//窗口事件的回调函数
mainForm.wndproc = function(hwnd,message,wParam,lParam){
	select(message) {//判断消息类型
	  	case( 0xACCF/*_WM_TRAYMESSAGE*/ ) { //托盘图标消息
			if( lParam = 0x202/*_WM_LBUTTONUP*/ ){
				mainForm.show(true)
			}
			if( lParam = 0x203/*_WM_LBUTTONDBLCLK*/ ){ //双击托盘图标打开窗口 
				mainForm.height = startHeight;
				isMouseTab = true;
				isTrayClick = true;
			}
			if( lParam = 0x205/*_WM_RBUTTONUP*/ ){
	    		import mouse;
	    		x,y = mouse.getPos();
	    		
	    		//弹出托盘菜单以前,一定要前置主窗口中,不然不点击菜单不会消失
	    		win.setForeground(mainForm.hwnd)
	    		mainForm.popmenu.popup( x,y,true )
	    	}
		}
	}
}


//浏览器插件注册事件
//开始导航前的事件
wb.BeforeNavigate2 = function( pDisp, url, flags, targetFrame, postData, headers, cancel ) { 	
	if(url and string.startWith(url,baseUrl)){
		cancel = false
		wb_is_navigating = true
	}else{
//		cancel = true
		wb_is_navigating = false
	}
	return url, flags, targetFrame, postData, headers, cancel;
}

//导航出错时的事件
wb.NavigateError=function(pDisp,url,target,statusCode,cancel){
    if(url and string.startWith(url,baseUrl)){
		//打开的是坐席页面,重新打开
		wb.go(homeUrl)
//		console.log('打开失败，重新打开')
	}
    return url,target,statusCode,cancel
}


//扩展方法给网页调用
wb.external = {
    
    openUser = function(){
		//console.log("eval")
		//dscreen.openUrl(baseUrl+"/server/client/seat/dscreen/userInfo");
	}
    
    //打开呼叫页
	openCall = function(){
		//console.log("call")
		//dscreen.openUrl(baseUrl+"/server/client/seat/dscreen/call");
	}
	
	//打开评价页
	openEval = function(){
		//console.log("eval")
		//dscreen.openUrl(baseUrl+"/server/client/seat/dscreen/eval");
	}
	
	getViewZoom = function(){
		return viewZoom;
	}
	
} 









loginUrl = 'http://127.0.0.1:8888/server/client/login'

//打开设置窗口
gosetting = function(){
    if(child_set and child_set.valid){
        child_set.show()
     	return ; 
     }
	//密码正确，打开设置窗口	
	child_set = mainForm.loadForm("\res\setting.aardio",mainForm);

	
	child_set.buttonEnter.oncommand = function(){
		//保存
		if(child_set.save_setting()){
			ini=fsys.ini(constant.getUserConfPath())
			sec_ot = ini.getSection("other")
			var oldSelectedLanguage = sec_ot.oldSelectedLanguage;
			child_set.show(false)
			mainForm.msgbox(internationalData.getValueForLanguageAndKey(oldSelectedLanguage,"saveSettingSuccess"),
							internationalData.getValueForLanguageAndKey(oldSelectedLanguage,"tip"))
			//保存设置后重新加载
			init_();
		}
	}
	
	child_set.buttonCancel.oncommand = function(){
		//取消
		child_set.show(false)
		
	}
}

//退出事件
on_close = function(){
	var ok = true;//winform.msgboxTest("是否退出？","退出");
	if(ok){
		tray.pop(internationalData.getValue("exit"),
				internationalData.getValue("tip"),2)
		is_exis = true;
		
		if(prcs){
			prcs.write('exit\n')
		}
		if(child_set){
			child_set.close()
		}
		mainForm.close()	
	}
}
 
 //退出时删除托盘
mainForm.onClose = function(hwnd,message,wParam,lParam){
	if(!is_exis){
		//隐藏
		mainForm.show(false)
		return false;
	}
	tray.delete();
}
 
tray = win.util.tray(mainForm.hwnd) //创建托盘图标
tray.tip = internationalData.getValue("running") //设置鼠标提示 
tray.message =0xACCF/*_WM_TRAYMESSAGE*/

mainForm.popmenu = win.ui.popmenu(mainForm);//创建弹出菜单
mainForm.popmenu.add('&'+internationalData.getValue("setting"),function(id){ 
    gosetting()	
})

mainForm.popmenu.add('&'+internationalData.getValue("hotkey"),function(id){ 
     mainForm.loadForm("\res\hotkey.aardio",mainForm);
})

mainForm.popmenu.add('&'+internationalData.getValue("about"),function(id){ 
    mainForm.loadForm("\res\about.aardio",mainForm);
})

mainForm.popmenu.add('&'+internationalData.getValue("exit"),function(id){ 
    on_close();
})


mouseHookFunction = function(msg,x,y,mouseData,injected,flags,timeStamp,extraInfo){
	if( injected ) return; //模拟鼠标不处理
	//应用顶部弹出
	var winX,windY,cx,cy = mainForm.getPos();
	minTabY = windY-5;
	maxTabX = winX+cx;
	minTabX = winX;
	if(isMouseTab){//鼠标放在标题栏,放大缩小的坐标范围
		maxTabY = windY+cy;
	}else {
		maxTabY = windY+touchHeight;
	}
	//console.log(minTabY)
	//鼠标已经移动到应用头部,显示出来
	if(y>minTabY && y<maxTabY && x>minTabX && x<maxTabX){
		//console.log("鼠标已经移动到应用头部");
		mainForm.height = startHeight;
		isMouseTab = true;
		isTrayClick = false;
	}else {
		if(minTabY>-5){//窗口已经移出顶部
			mainForm.height = startHeight;
			isMouseTab = true;
		}else {
			//已经顶部显示,就继续显示
			if(mainForm.height>50 && x>minTabX && x<maxTabX && y<maxTabY){ 
				mainForm.height = startHeight;
				isMouseTab = true;
			}else { //顶部没显示
				if(isTrayClick){ //托盘双击显示
					mainForm.height = startHeight;
					isMouseTab = true;
				}else {			//否则隐藏
					mainForm.height = touchHeight;
					isMouseTab = false;
				}
			}
			
		}
	}	
}


//监听鼠标回调函数
mouseHook.proc = mouseHookFunction;


mainForm.wndproc = function(hwnd,message,wparam,lparam){ 
    if( message = 0xA1/*_WM_NCLBUTTONDOWN*/ ){
        if( wparam == 20/*_HTCLOSE*/ ){ 
        	//鼠标按下关闭按钮、释放鼠标以前及时关闭钩子,避免xp系统关闭窗体时出现的卡顿
           
            //mouseHook.close();
        }
    }elseif( message = 0x0005/*_WM_SIZE */ ){
    }elseif(message ==  0x100/*_WM_KEYDOWN*/){
    }
    
}


callTicket = function(){
	var js = /**
	try {
        call();
    }catch (e) {}
	**/
	wb.doScript(js)
}

recall = function(){
	var js = /**
	try {
        reCall();
    }catch (e) {}	
	**/
	wb.doScript(js)
}

start = function(){
	var js = /**
	try {
        deal();
    }catch (e) {}		
		
	**/
	wb.doScript(js)
}

abandon = function(){
	var js = /**
		
		try {
        abandon();
    }catch (e) {}	
	**/
	wb.doScript(js)
}

transfer = function(){
	var js = /**
	try {
       transfer();
    }catch (e) {}
		
	**/
	wb.doScript(js)
}

done = function(){
	var js = /**
	try {
       finish();
    }catch (e) {}
		
	**/
	wb.doScript(js)
}

secCall = function(){
	var js = /**
		try {
      abandonCall();
    }catch (e) {}
		
	**/
	wb.doScript(js)
}

specCall = function(){
	var js = /**
		try {
       specialCall();
    }catch (e) {}
		
	**/
	wb.doScript(js)
}

doeval = function(){
	var js = /**
		try {
       openDscreenEval();
    }catch (e) {}
		
	**/
	wb.doScript(js)
}

mainForm.initHotkey = function(){
	constant.removeReadonlyAttr(constant.getUserConfPath())
	ini=fsys.ini(constant.getUserConfPath())
	//读取小节对象
	sec = ini.getSection("hotkey")
	if(sec.call == 1){
		call_kid = mainForm.reghotkey( function(id,mod,vk){
			callTicket()
		},0,0x70/*_VK_F1*/)
	}else{
		mainForm.unreghotkey(call_kid)
	}
	if(sec.recall == 1){
		recall_kid = mainForm.reghotkey( function(id,mod,vk){
			recall()
		},0,0x71/*_VK_F2*/)
	} else{
		mainForm.unreghotkey(recall_kid)
	}
	if(sec.start == 1){
		start_kid = mainForm.reghotkey( function(id,mod,vk){
			start()
		},0,0x72/*_VK_F3*/)
	} else{
		mainForm.unreghotkey(start_kid)
	}
	if(sec.abandon == 1){
		abandon_kid = mainForm.reghotkey( function(id,mod,vk){
			abandon()
		},0,0x73/*_VK_F4*/)
	} else{
		mainForm.unreghotkey(abandon_kid)
	}
	if(sec.transfer == 1){
		transfer_kid = mainForm.reghotkey( function(id,mod,vk){
			transfer()
		},0,0x74/*_VK_F5*/)
	} else{
		mainForm.unreghotkey(transfer_kid)
	}
	if(sec.done == 1){
		done_kid = mainForm.reghotkey( function(id,mod,vk){
			done()
		},0,0x75/*_VK_F6*/)
	} else{
		mainForm.unreghotkey(done_kid)
	}
	if(sec.secCall == 1){
		secCall_kid = mainForm.reghotkey( function(id,mod,vk){
			secCall()
		},0,0x76/*_VK_F7*/)
	} else{
		mainForm.unreghotkey(secCall_kid)
	}
	if(sec.specCall == 1){
		specCall_kid = mainForm.reghotkey( function(id,mod,vk){
			specCall()
		},0,0x77/*_VK_F8*/)
	} else{
		mainForm.unreghotkey(specCall_kid)
	}
	if(sec.eval == 1){
		eval_kid = mainForm.reghotkey( function(id,mod,vk){
			doeval()
		},0,0x78/*_VK_F9*/)
	} else{
		mainForm.unreghotkey(eval_kid)
	}
}


//初始化
init_ = function(){
    //读取配置
	ini=fsys.ini(constant.getUserConfPath())
	sec_ot = ini.getSection("other")
	//密码
	if(sec_ot.setting_pass != null && sec_ot.setting_pass != ""){
		setting_pass = sec_ot.setting_pass
	}
	var title = internationalData.getValue("title")
	if(title == ""){
		title="Software Callpad"
	}
	mainForm.text = title
	
	//界面大小
	viewZoom = sec_ot.viewZoom;
	if(viewZoom == null){
		viewZoom = 1;
	}
	mainForm.width = windowWidth * viewZoom;
	startHeight = windowHeight * viewZoom;
	mainForm.height = startHeight;
	
	var js = /**
	try {
       setBodyZoom();
    }catch (e) {}
	**/
	wb.doScript(js)
	
	sec = ini.getSection("server")
	if(sec.server_ip == null){
		sec.server_ip = '127.0.0.1'
	}
	if(sec.server_port == null){
		sec.server_port = '8888'
	}
	baseUrl =  'http://'+sec.server_ip+':'+sec.server_port
	loginUrl = baseUrl + '/server/client/login'
	homeUrl = baseUrl + '/server/client/seat/index'

	wb.go(loginUrl)	
	//dscreen = mainForm.loadForm("\res\dscreen.aardio",mainForm);
	//dscreen.openUrl(baseUrl + '/server/client/seat/dscreen/userInfo');
	
}

windowWidth = mainForm.width;
windowHeight = mainForm.height;
init_();
mainForm.initHotkey();
mainForm.enableDpiScaling();
mainForm.show();

return win.loopMessage(); 
