import win.ui;
import win.ui.grid;
import win.ui.menu;
import java;
import fsys.version;
import console;
/*DSG{{*/
var winform = win.form(text="         选项         ";right=791;bottom=575)
winform.add(
edit2={cls="edit";text="请选择JDK路径..";left=120;top=16;right=640;bottom=48;bgcolor=16777215;edge=1;font=LOGFONT(h=-17);z=2};
listview={cls="listview";left=8;top=64;right=784;bottom=504;edge=1;font=LOGFONT(h=-20);z=4};
static={cls="static";text="JDK_HOME";left=40;top=16;right=112;bottom=48;align="center";center=1;transparent=1;z=1};
static2={cls="static";left=16;top=536;right=536;bottom=568;center=1;color=255;font=LOGFONT(h=-17);transparent=1;z=5};
浏览={cls="button";text="浏览 ..";left=640;top=16;right=736;bottom=48;font=LOGFONT(h=-17);z=3}
)
/*}}*/

import config;
var config_file_name="main";
get_config=function(name){ return config[config_file_name][name]  }
set_config=function(name,val){config[config_file_name][name]=val; }

subscribe("加载JDK列表",function(...){
	var jdks=get_config("jdks");
	if(!jdks) return ; 
	winform.listview.clear();
	if(!jdks){ return ;}
	for k,v in jdks{
		if (v[3]) winform.listview.addItem( {  text={v[1]; v[2]; v[3] } } ) ; 
	} 
} )
 
subscribe("加载默认JDK",function(...){
    var jdk= get_config("默认JDK" );  
    if(!jdk) return ;  
    for k,v in winform.listview.items{
     	if(v[1]==jdk[1]){
    		winform.static2.text="默认JDK("++v[1]++"): "++v[2]+" , 路径: "++v[3];
     		winform.listview.setChecked(k);
     		winform.listview.selIndex=k;
     		break;
     	}
    }
} )

subscribe("保存JDK列表",function(...){
	var jdks={};
	for k,v in winform.listview.items{ 
		table.push(jdks,v);
	}
	set_config("jdks",jdks );	
} );

subscribe("加入JDK列表",function(java_info){
    var 编号=..string.random(6);
    var 版本,路径=java_info.当前JDK编译器产品版本,java_info.当前JDK编译器所在目录 ;
	winform.listview.addItem( {  text={编号 ; 版本; 路径 } } ) ;
	publish("保存JDK列表",);
} ) ;


import win.ui.menu;
winform.listview.onnotify = function(id,code,ptr){  
 	 if( code == 0xFFFFFF9B/*_LVN_ITEMCHANGED*/ ){ 
 	 	var nmListView = winform.listview.getNotifyMessage(code,ptr);
 	 	if( !nmListView )
 	 		return;
 	 		
 	 	if( nmListView.uNewState & 0xF000/*_LVIS_STATEIMAGEMASK*/){
 	 		//var selIndex = nmListView.iItem; 	 		
 	 		//if( winform.listview.getChecked( selIndex ) ){
 	 		 //winform.listview.setChecked(0,false);
 	 		 //winform.listview.setChecked(selIndex);
 	 			//winform.static.text = "选中:" + selIndex
 	 		//} 
 	 	}  
 	 }
 	 elseif( code = 0xFFFFFFFB/*_NM_RCLICK*/ ){
 	 
 	 	var x,y = win.getMessagePos();  
 	 	var nmListView = winform.listview.getNotifyMessage(code,ptr);
 	 	//创建弹出菜单
		var popmenu = win.ui.popmenu(winform); 
		popmenu.add('设置默认JDK',function(id){ 
				winform.listview.setChecked(0,false);
				winform.listview.setChecked(nmListView.iItem);
				var row=winform.listview.getRowTable(nmListView.iItem);
				if(row) {
					set_config("默认JDK",row );	
    				winform.static2.text="默认JDK("++row[1]++"): "++row[2]+" , 路径: "++row[3];
				}
				
		} ) 
		popmenu.add('删除',function(id){ 
				var row=winform.listview.getRowTable(nmListView.iItem);
				if(row) {
					var t=win.msgboxTest("确认删除?","警告",winform.hwnd);
					if(t){
						winform.listview.delItem( nmListView.iItem );
						publish("保存JDK列表",); 
					}
				}				
		} ) 
		popmenu.popup(x-8,y-8,true);
		popmenu.close();
 	 }
}

winform.listview.insertColumn("编号",120,,0x0/*_LVCFMT_LEFT*/) 
winform.listview.insertColumn("版本",160,,0x3/*_LVCFMT_CENTER*/) 
winform.listview.insertColumn("路径",-1,,0x0/*_LVCFMT_CENTER*/)
winform.listview.checkbox=true;
winform.listview.fullRow=true;
winform.listview.gridLines=true;
winform.listview.getRowTable = function(row){
    return owner.items[row]; 
}

winform.浏览.oncommand = function(id,event){
	import fsys.dlg ;
	var str= fsys.dlg.opendir(..fsys.getCurDir(),winform.hwnd,"选择JAVA_HOME") ;
	winform.edit2.text=str;
	if(#str) {
		win.setenv("JAVA_HOME",str); 
		var javac = java.getJavacPath();
		if(io.exist(javac)){	
			var home,ver = java.getJavaHome();
			var javac = java.getJavacPath();			
			var productVersion = fsys.version.getInfo( javac ).productVersion;
			var java_info={
				当前JDK编译器版本=ver;
				当前JDK编译器所在目录=home;
				当前JDK编译器路径=java.getJavacPath () ;
				当前JDK编译器产品版本= tostring(productVersion) ; 
			};  
			///console.dump( java_info ) ;
			var t=winform.msgboxTest(java_info,"将当前JDK加入列表?");
			if(t){ publish("加入JDK列表",java_info); }
				
		}else{
			win.msgboxErr("不是有效的JAVA_HOME","错误",winform.hwnd);
			winform.edit2.text="";
		}
	}	
}

win.setTimeout(
	function(){
		publish("加载JDK列表",);
	},200
)
win.setTimeout(
	function(){
		publish("加载默认JDK",);
	},400
)


winform.show();
win.loopMessage();
return winform;