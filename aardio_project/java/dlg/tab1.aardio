import java; 
import win.ui;
import console;
/*DSG{{*/
var winform = win.form(text="         编译器          ";right=791;bottom=575)
winform.add(
combobox2={cls="combobox";left=120;top=16;right=736;bottom=36;dl=1;dt=1;edge=1;font=LOGFONT(h=-17);items={};mode="dropdownlist";z=1};
cp={cls="edit";text="类路径,用逗号分隔";left=120;top=96;right=736;bottom=128;bgcolor=16777215;dl=1;edge=1;font=LOGFONT(h=-17);z=8};
edit={cls="edit";text="1";left=72;top=144;right=104;bottom=176;align="center";edge=1;font=LOGFONT(h=-20);num=1;z=12};
static={cls="static";text="CLASSPATH";left=40;top=96;right=112;bottom=128;align="right";center=1;transparent=1;z=9};
static1={cls="static";text="编译参数";left=240;top=144;right=288;bottom=176;align="right";center=1;transparent=1;z=10};
static3={cls="static";text="JDK版本";left=40;top=16;right=112;bottom=48;align="right";center=1;notify=1;transparent=1;z=2};
static4={cls="static";text="源代码路径";left=40;top=56;right=112;bottom=88;align="right";center=1;transparent=1;z=3};
static6={cls="static";text="编译";left=24;top=144;right=64;bottom=168;align="right";transparent=1;z=13};
static7={cls="static";text="线程";left=24;top=160;right=64;bottom=184;align="right";transparent=1;z=14};
日志={cls="edit";left=8;top=184;right=784;bottom=568;bgcolor=16777215;db=1;dl=1;dr=1;dt=1;edge=1;font=LOGFONT(h=-15);multiline=1;readonly=1;vscroll=1;z=7};
浏览={cls="button";text="浏览..";left=688;top=56;right=736;bottom=88;z=5};
源代码路径={cls="edit";text="源代码路径,用逗号分隔";left=120;top=56;right=688;bottom=88;bgcolor=16777215;dl=1;dt=1;edge=1;font=LOGFONT(h=-17);z=4};
编译={cls="button";text="执行编译";left=120;top=144;right=224;bottom=176;font=LOGFONT(h=-17);z=6};
编译参数={cls="edit";left=296;top=144;right=736;bottom=176;edge=1;font=LOGFONT(h=-17);z=11}
)
/*}}*/

import config;
var config_file_name="main";
get_config=function(name){ return config[config_file_name][name]  }
set_config=function(name,val){config[config_file_name][name]=val; }

var 换行符='\r\n' ;
var JDK,SRC,CP,OPT="","","","";

subscribe("加载JDK",function(...){
    import win;
    var jdks=get_config("jdks" );
    if(!jdks) {        
		publish("打印日志","[error]没找到可用的JDK列表" );
    	return ; 
    }
    var JDK编号s=..string.split(JDK," ");
    if(!JDK编号s) {        
		publish("打印日志","[error]JDK编号错误" );
    	return ; 
    }
    var JDK编号=JDK编号s[1];
    publish("打印日志","JDK编号"++JDK编号 );
    for k,v in jdks{
    	if( v[1] == JDK编号){
    		thread.set("JDK_HOME",v[3]);
    		break;
    	}
    }
    var JDK_HOME=thread.get("JDK_HOME");
    if(!JDK_HOME){       
		publish("打印日志","[error]JDK_HOME未找到" );
    	return ; 
    }
	win.setenv("JAVA_HOME",JDK_HOME);	
	var home,ver = java.getJavaHome();
	if(ver) publish("打印日志","当前JDK编译器版本 " ++ ver );
	if(home) publish("打印日志","当前JDK编译器所在目录 " ++ home );
	publish("打印日志","当前JDK编译器路径 " ++  java.getJavacPath () );
	///publish("打印日志","当前加载的JRE根目录 " ++ java.getJvmHome() ); 

	import fsys.version
	var javac = java.getJavacPath();
	if( ..io.exist(javac) ){
		var productVersion = fsys.version.getInfo( javac ).productVersion; 
		publish("打印日志","当前JDK编译器产品版本 " ++ tostring(productVersion)); 
		thread.set("javac",javac);
	}
			
} )

subscribe("加载CLASSPATH",function(...){
	var classpath={};
	var cps=..string.split(CP,",");
	for k,v in cps{
		v=..string.trim(v);
		table.push(classpath ,v);
	}
	if(#classpath) {
		//thread.set("classpath" , classpath );
		java.addClassPath( classpath )
	}
	var cpstext=..string.join(cps," , ");
 	publish("打印日志","加载CLASSPATH: "++cpstext);
	
} )

subscribe("加载SRC",function(...){
	var srcpaths={};
	var srcs=..string.split(SRC,",");
	for k,v in srcs{
		v=..string.trim(v);
		table.push(srcpaths ,v);
	}
	if(#srcpaths) thread.set("srcpaths" , srcpaths );
	var srctext=..string.join(srcs," , ");
 	publish("打印日志","加载SRCPATH: "++srctext);	
} )

subscribe("加载编译环境",function(...){    
	publish("加载JDK",);	
	///publish("打印日志","编译参数:JDK: "++JDK );
	
	publish("加载SRC",);
	//publish("打印日志","编译参数:SRC: "++SRC );	
	
	publish("加载CLASSPATH",);	
	//publish("打印日志","编译参数:CP: "++CP );
	 
	thread.set("JAVA_OPTION" , ..string.trim(OPT) );
	publish("打印日志","编译参数:JAVA_OPTIONS: "++OPT );
 	
} );

subscribe("打印日志",function(text){
    if("-"==text){ 
		winform.日志.appendText(换行符);
	} else {
    	var t= tostring(..time.now());
    	var str=..string.format("%s %s%s",t,text,换行符 ); 
		winform.日志.appendText(str);
    }
} );

var get_formst_combobox=function(v){
    var s=v[1]++" - "++v[2]++" - "++v[3] ;
    return  s ;
}

import thread.works;
var javacWorks=null;
subscribe("初始化编译引擎",function(...){
	var  javac_thread= tonumber(winform.edit.text);
	publish("打印日志","编译线程数: "++javac_thread ); 
    if(null!=javacWorks) javacWorks=null; sleep(1000);
	javacWorks=thread.works( javac_thread ,
		function(javaopt) {
			///....
			import console;
			import java;
			//console.dump(javaopt);
			var javafile=javaopt.java;
			var JAVA_OPTION=thread.get("JAVA_OPTION");
			var javac=thread.get("javac");
			if(javac){ java.compile( javafile ,JAVA_OPTION ) ; }
			else { publish("打印日志","[error]javac.exe错误,编译失败 "++javafile);}
			
			var str="*** 编译成功 "++""++javafile;
			//console.dump(str);
			publish("打印日志",str);
			return str,javaopt;
		} 
	); 
		
} )  


import win.timer;
var timer = win.timer(winform,10);
timer.disable()
timer.onTimer = function(){ 
	while( var msg,java = javacWorks.pop() ) {
		publish("打印日志",msg);	
	}
	if( javacWorks.finished() ){  
		timer.disable();  
		winform.编译.disabled=false;
		publish("打印日志","编译完成");
		publish("打印日志","-");
		publish("打印日志","-");
	} 
}


var 编译JAVA=function(java){
	javacWorks.push({java=java;JDK=JDK;CP=CP;OPT=OPT;});
}


subscribe("进行编译",function(...){
	var src= winform.源代码路径.text; 
	var javas={};
	var srcarr=..string.split(src,",");
	for k,v in srcarr{
		v=..string.trim(v);
		fsys.enum( v, "*.java",  
    		function(dir,filename,fullpath,findData){   
        		if(filename){   
            		///io.print("发现文件："+filename,"完整路径："+fullpath)/*可使用 return false退出枚举文件过程*/  
            		table.push(javas,fullpath);
        		} else{  
            		///io.print( "发现目录：" + dir )  
        		}  
    		},  
    		function(dirpath,dirname){  
        		/*处理每个子目录前首先调用此函数,返回false跳过该目录*/  
        		///if(string.startWith(dirname,"."){ return false;}
        		return true;  
    		}   
		); 
	
	}
	
	//import console;
	///console.dump(javas);
	if(#javas){
		var q=#javas;
		publish("打印日志","共"++q++"个java源代码文件..");
		for k,v in javas {
			编译JAVA(v);
		} 
	} else{ 
		publish("打印日志","[warn]没有可以编译的java源代码文件");
	}
	
	win.setTimeout(
		function(){
			timer.enable();
		},1000
	)
	  
} )
subscribe("初始化编译参数_java_options",function(...){
	var java_options=get_config("java_options");
	if(#java_options) winform.编译参数.text=java_options;
} )

subscribe("加载JDK选项",function(...){
	var jdks=get_config("jdks");
	if(!jdks) return ; 
	winform.combobox2.clear();
	if(!jdks){ return ;}
	for k,v in jdks{
		if (v[2]) {
			var str=get_formst_combobox(v);
			winform.combobox2.add(  str ) ; 
		}
	}   
	winform.combobox2.selIndex=1;	 
} )
subscribe("加载默认JDK选项",function(...){
	var jdk= get_config("默认JDK" );  
	if(!jdk) return ;  
	var str=get_formst_combobox(jdk);
	var q=0;
	for k,v in winform.combobox2.items{
		if(str==v){
			q=k; break;
		}
	}
	if(q>0) winform.combobox2.selIndex=q;	
});


winform.浏览.oncommand = function(id,event){
	import fsys.dlg ;
	var str= fsys.dlg.opendir( ..io._exedir ,winform.hwnd,"选择源代码路径") ;
	winform.源代码路径.text=..string.trim(str);	
}

winform.cp.text=  get_config("CLASSPATH") : ..io._exedir++" , "++ ( ..io.joinpath( ..io._exedir ,"java"));
winform.源代码路径.text= get_config("SRC") : ..io._exedir;

win.setTimeout(	function(){ publish("初始化编译参数_java_options",); },100)
win.setTimeout(	function(){ publish("加载JDK选项",); },100)
win.setTimeout(	function(){ publish("加载默认JDK选项",); },400 )
win.setTimeout(	function(){ publish("打印日志","日志预加载完成");publish("打印日志","-"); },800)     
     
winform.编译.oncommand = function(id,event){
    winform.编译.disabled=true;
    JDK=winform.combobox2.selText;
    SRC=winform.源代码路径.text;
    CP=winform.cp.text; 
    OPT=winform.编译参数.text; 
	publish("加载编译环境",);
	publish("初始化编译引擎",)
	publish("进行编译",);
	publish("保存编译参数",);
	//winform.编译.disabled=true;
	set_config("SRC",..string.trim(SRC));
	set_config("CLASSPATH",CP);
	set_config("java_options", ..string.trim(OPT));
}

winform.onClose = function(hwnd,message,wParam,lParam){
    if(null!=javacWorks) javacWorks.quit();
}

winform.show();
win.loopMessage();
return winform;