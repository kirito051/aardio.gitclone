//scnner 扫描器

namespace libs

namespace scnner{
	import thread;
	import thread.command;
	var listener = thread.command(); 
		
	listener.check = function( file ){
   		import fsys;
   		import fsys.file;
   		import console;
   		console.open();	 			
		var filepath=..io.fullpath("~/"+file);   		
		if(..io.exist(filepath)){
			console.log(filepath);
			var mtime=fsys.file.lastModified(filepath) ;
			var otime=thread.get(filepath):"0";
			if(otime!=mtime){
				thread.set(filepath, mtime); //重置修改时间
				console.log("mtime",mtime);
				//publish("quartz",filepath)
				thread.set("quartz", filepath);
/*
				import win;
				import win.ui;
				win.setTimeout(
					function(){
						thread.set("quartz", );
					},1000
				)
*/
			}
			
			//console.log(mtime);
			/*
for line in ..io.lines(filepath) {  
				line=..string.trim(line);
				if(!(..string.startWith(line,"#"))){
					listener.quartz(line);
				}
			}
*/
		}
	} 
}

class scnner{
	ctor( file="crontable.txt" ){
		this.file = file;
	}
	@_metaProperty;	
	 
	file="crontable.txt";
	
	threadFun = function(file){ 
		import thread;
		import thread.command;	
		do{ 		
			thread.command.check(file); 
			sleep(1000)
		}while((thread.get("scnnerInterval"):false))
	}
	
	stop = function(){  
		thread.set("scnnerInterval", false);
		}

	start = function(){ 
   		import console;
		import thread;
		import thread.command;
		console.log("scnner 扫描器 start");	
		thread.set("scnnerInterval", true);   	
		thread.invoke(
			function(that,file){
				that.threadFun(file)  
			},this,file
		)	
 	}	
}