import console;
class Utilss {
    ctor() {}
    get_inter_list = function(vip_url) {
        import thread;
        import thread.manage;
        var optales = null;;
        var thrdFunc = function(vip_url) {
            import HttpUtil;
            import Parse;
            import console;
            import Utilss;
            import Cache;
            var httpUtil = HttpUtil();
            var md5str = Utilss.getMd5(vip_url);
            var html = Cache.load(md5str);
            if (!#html) {
                html = httpUtil.sent(vip_url);
                if (html && #html > 1000) {
                 	Cache.put(md5str, html);
                 }
            }          
            var optales = Parse().parse(html);
            return optales;
            
        }
        manage = thread.manage(1);
        manage.create(thrdFunc, vip_url).onEnd = function(ret) {
            sleep(100);
            optales = ret;
        }
        manage.waitClose()
        return optales;
    }
    
    /**    
    get_inter_list_2 = function(url) {
        import thread.command;
        import raw;
        var cmm = thread.command()
        var opt = null;
        cmm.dosomething = function() {
            import HttpUtil;
            import Parse;
            import console;
            var html = HttpUtil().sent(url);
            //	var html=..string.load("c:\eggvod.html") ; 
            var opt = Parse().parse(html);
        }
        var thrdHandle = thread.create(function() {
            import thread.command;
            thread.command.dosomething()
        });
        thread.waitOne(thrdHandle)
        thread.getExitCode(thrdHandle)
        raw.closehandle(thrdHandle)
        return opt;
    }
    **/
    
    /**
	 get_inter_list_2=function(){
		import  thread ; 
	 	var thrdFunc = function(a,b){
			import console;
    		console.log("参数",owner,a,b)
    		console.log("线程变量",gThrd) //thread.set写入的变量在这里就是全局变量
    		return 1,2,a + b
		}
		thread.set("thrdFunc", thrdFunc);
		var a,b,c = thread.call("thrdFunc","owner",3,11);
	 	return a,b,c;
	 }
	 **/
	 
    /**
	 get_inter_list_1=function(){
		import  thread ; 
		import  raw ; 
  		thread.create_suspended = true	;
		var thrdHandle = thread.create( 
			function(url){
				import  HttpUtil ;
				import  Parse ; 
				import  console ;
				//var html=HttpUtil().sent(url);
				var html=..string.load("c:\eggvod.html") ;
				///console.log(html);
				//if(html){
					var optales=Parse().parse(html);
					//console.dumpTable(optales);
					return optales;				
				//}				
		},this.url );		
		//线程恢复运行
		thread.resume(thrdHandle)
		
		while( thread.stillActive(thrdHandle) ){
			sleep(1*1000)
		} 
		thread.waitAll(thrdHandle)
		raw.closehandle(thrdHandle) 
	 }
	 **/
}
namespace Utilss {
    /**定义到这里的是静态方法**/
    getMd5 = function(str) {
        import crypt;
        var md5 = crypt.md5(str);
        return md5;
    }
}

//var url="https://www.eggvod.cn/jx.php?lrspm=29211626&zhm_jx=https://v.youku.com/v_show/id_XNDUyMDA1MjEwMA==.html?" 
//console.log( url ) ;
/**
util=Util (url);
var optales = util.get_inter_list();
console.dumpTable( optales) ;
console.pause();



util=Utilss ();
var optales = util.get_inter_list(url);
console.dumpTable( optales )  ; 
console.pause();
**/