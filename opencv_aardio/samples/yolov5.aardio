import cv2
import console
class faceWithLandmark{
	ctor( confThreshold,nmsThreshold,objThreshold ){
		this.net = ..cv2.dnn.readNet("./model/yolov5s-face.onnx")
		this.anchors = { {4,5,  8,10,  13,16}, {23,29,  43,55,  73,105},{146,217,  231,300,  335,433} };
		this.stride = { 8.0, 16.0, 32.0 };
		this.inpWidth = 2048;
		this.inpHeight = 2048;
		
		this.net.setConfig({
			confThreshold = confThreshold; 
			nmsThreshold = nmsThreshold; 
		})
	};
	
	sigmoidX = function(x){
		return 1 / (1 + ..math.exp(-x)); 
	}
	
	decode = function(outs,img){
		var ratioh = img.height / this.inpHeight
		var ratiow = img.width / this.inpWidth
		var n = 0
		var q = 0
		var i = 0
		var j = 0
		var nout = 16
		var rowInd = 0
		var k = 0;
		
		var confidences = {}
		var boxes = {}
		//特征图尺度
		var data = outs[1].data
		for(n=1;3;1){
			numGridX = ..math.round(this.inpWidth / this.stride[n])
			numGridY = ..math.round(this.inpHeight / this.stride[n])
			for(q=1;3;1){
				anchorW = this.anchors[n][q*2-1]
				anchorH = this.anchors[n][q*2]
				for(i=1;numGridY;1){
					for(j=1;numGridX;1){
						var pdata = ..raw.convert(data,{float v[16]},rowInd*nout*4).v
						var boxScore = this.sigmoidX(pdata[5])
						if(boxScore>0.3){
							faceScore = this.sigmoidX(pdata[16]);
							cx = (this.sigmoidX(pdata[1]) * 2 - 0.5 + j-1) * this.stride[n];  ///cx
							cy = (this.sigmoidX(pdata[2]) * 2 - 0.5 + i-1) * this.stride[n];   ///cy
							w = ( (this.sigmoidX(pdata[3])*2) ** 2 ) * anchorW;
							h = ( (this.sigmoidX(pdata[4])*2) ** 2 ) * anchorH;
							
							left = (cx - 0.5*w)*ratiow;
							top = (cy - 0.5*h)*ratioh;  
							..console.log(left,top,w,h)
							..table.push(confidences,faceScore)
							..table.push( boxes,::RECT(left,top,..math.round(w*anchorW),..math.round(h*anchorH)) );
							
							for(k=5;15;2){
								
							
							}
						}
						rowInd++	
					}
				}
			}
		}	
		return boxes,confidences; 
	}
	
	detect = function(img){
		..console.log("detect")
		var blob = this.net.blobFromImage(img,1/255,::SIZE(this.inpWidth,this.inpHeight))
		this.net.setInput(blob)
		..console.log("blob")
		var outs = this.net.forward( this.net.getUnconnectedOutLayersNames() )
		boxes,confidences = this.decode(outs,img)
		var indices = ..cv2.dnn.nmsBoxes(boxes,confidences,0.3,0.5)
		var filterBoxes = {}
		var scores = {}
		..table.map(indices,function(v,k,result){
			..table.push(filterBoxes,filterBoxes[v]);
			..table.push(scores,confidences[v])
		})
		return filterBoxes,scores; 
	}
}

yolov5 = faceWithLandmark()

import inet.http
//下载范例图片,创建Mat对象
//var buffer = inet.http().get("https://github.com/hpc203/yolov5-face-landmarks-opencv/blob/main/s_l.jpg")
//assert(buffer,"图片下载失败")
buffer = string.load("./images/s_l.jpg")
var img = cv2.imdecode(buffer,1/*_CV2_IMREAD_COLOR*/)
yolov5.detect(img)
console.pause()
cv2.imshow("img",img)
cv2.waitKey(0)
