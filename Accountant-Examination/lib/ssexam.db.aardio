//db SQLite数据库
namespace ssexam.db{
	//import sqlite;
	import fsys.ini;
	import fsys;
	import console;
	import table;
	
    import sqlite.aes128

 	//创建数据库和表
 	try{
 		db = ..sqlite("\sssystem\aeinv.dll","sansenbeta");
 		//db.rekey("123")
 		//db = ..sqlite.aes128("\db\dat.db","123") 
 		
 		//console.dump(db.key("123"))
	}
		


	/* 
 	 * SQLite事务、关闭数据库
 	 */		
	dbBegin = function() {
		if(!db) return false;
		db.exec("BEGIN;");
	}
	
	dbCommit = function() {
		if(!db) return false;
		db.exec("COMMIT;");
	}
	
	close = function() {
		if(!db) return false;
		//db.exec("VACUUM"); // 压缩优化数据库
		..sqlite.close();
	}	

    /**
    ** 本地查询激活码
    **/
    getRegCode=function(){
    	if(!db) return false;
    	//查 - 返回首行数据
       return db.stepQuery("SELECT * FROM [T_Setting] ",{ item = "RegCode"} //可选使用表对象指定where条件参数
       ) 
    }
    /**
    ** 保存激活码
    **/
    setRegCode=function(注册码){
    	if(!db) return false;
    	//查 - 返回首行数据
       //改 - exec函数也可以用一个表添加简单的命名参数（ 添加并过滤分隔符 ）
		db.exec("UPDATE T_Setting SET value = @value WHERE item = 'RegCode';",{
			value = 注册码;
		} )
		 return  true; 
		
    }


	/**
	** 获取试卷
	**/
	getPaper=function(subject_name){
		if(!db) return false;

		if(!subject_name || subject_name=='') {
			return false;
		}
		
		var 试题数量={};		var 试卷题目={};
        试题数量["财经法规与职业道德"]={单选题=30;多选题=20; 判断题=20;计算分析题=0;案例分析题=2};
        试题数量["会计基础"]={单选题=30;多选题=20; 判断题=20;计算分析题=2;案例分析题=0};
        试题数量["初级会计电算化理论"]={单选题=20;多选题=10; 判断题=20;计算分析题=0;案例分析题=0};

		试卷题目=db.getTable("SELECT * FROM [SINGLESELECT] where EXAMSUBJECTNAME='"+subject_name+"' order by RANDOM() limit "+试题数量[subject_name]["单选题"]+"");
		
		
		for(i=1;#试卷题目;1){
			试卷题目[i]["题型"]="单选题";
		
		}
		
        var dt=db.getTable("SELECT * FROM [MULTISELECT] where EXAMSUBJECTNAME='"+subject_name+"' order by RANDOM() limit "+试题数量[subject_name]["多选题"]+"");
        for(i=1;#dt;1){
        	dt[i]["题型"]="多选题";
        
        }
        
		table.push(试卷题目,table.unpack(dt));
		
		var dt=db.getTable("SELECT * FROM [JUDGE] where EXAMSUBJECTNAME='"+subject_name+"' order by RANDOM() limit "+试题数量[subject_name]["判断题"]+"")
		 for(i=1;#dt;1){
        	dt[i]["题型"]="判断题";
        
        }
		table.push(试卷题目,table.unpack(dt));
		
		if(试题数量[subject_name]["计算分析题"]){
			var dt=db.getTable("SELECT * FROM [CALCULATEANALYSE] where EXAMSUBJECTNAME='"+subject_name+"' order by RANDOM() limit "+试题数量[subject_name]["计算分析题"]+"")
		 	for(i=1;#dt;1){
        		dt[i]["题型"]="计算分析题";
        	
        	}
			table.push(试卷题目,table.unpack(dt));
		}
		
		if(试题数量[subject_name]["案例分析题"]){
			var dt=db.getTable("SELECT * FROM [CASEANALYSE] where EXAMSUBJECTNAME='"+subject_name+"' order by RANDOM() limit "+试题数量[subject_name]["案例分析题"]+"")
		 	for(i=1;#dt;1){
        		dt[i]["题型"]="案例分析题";
        	
        	}
			table.push(试卷题目,table.unpack(dt));
		}	
		
		
		
		
		//console.dump(试卷题目);
		return 试题数量,试卷题目; 
	
	}
	
	
	//****计算分析题答案***//
    计算分析题答案=function(qid){
        var result={};
    	var 分析题答案=db.getTable("SELECT * FROM [ACCOUNTMATTERSTANDARD] where QUESTION_ID='"+qid+"' order by id");
    	for(i=1;#分析题答案;1){
    	     if(result[分析题答案[i].ACCOUNTMATTERINDEX]==null){
    	     	result[分析题答案[i].ACCOUNTMATTERINDEX]="";
    	     }
    	     result[分析题答案[i].ACCOUNTMATTERINDEX]=result[分析题答案[i].ACCOUNTMATTERINDEX]+"<br>"+分析题答案[i].DEBITORCREDIT+"_"+分析题答案[i].ACCOUNTSUBJECT+"_"+分析题答案[i].AMOUNT;
    	    //table.push(result[分析题答案[i].ACCOUNTMATTERINDEX],分析题答案[i].DEBITORCREDIT+"_"+分析题答案[i].ACCOUNTSUBJECT+"_"+分析题答案[i].AMOUNT);
    	}
    	
    	return result;
    }
    
    
    //计算分析题得分
    计算分析题是否正确=function(qid,ACCOUNTMATTERINDEX,myAnswer){
    	var 分析题答案=db.getTable("SELECT * FROM [ACCOUNTMATTERSTANDARD] where QUESTION_ID='"+qid+"' and ACCOUNTMATTERINDEX='"+ACCOUNTMATTERINDEX+"' order by id");
    	//console.dump(分析题答案);
    	//console.dump(myAnswer)
    	if(#分析题答案!=#myAnswer){
    		return false; 
    	}else{
    	   for(i=1;#myAnswer;1){
    	     var str="SELECT * FROM [ACCOUNTMATTERSTANDARD] where QUESTION_ID='"+qid+"' and ACCOUNTMATTERINDEX='"+ACCOUNTMATTERINDEX+"'  and DEBITORCREDIT='"+myAnswer[i][1]+"' and ACCOUNTSUBJECT like '"+myAnswer[i][2]+"%' "
    	   	 var dt=db.getTable(str);
    	   	 //console.dump(dt);
    	   	 //console.log(str);
    	   	 if(#dt==0){
    	   	 	return false; 
    	   	 }
    	   
    	   }
    	   
    	}
    	
    	return true; 
    }
    
    
    //会计科目
   会计科目列表=function(){
   	   return  db.getTable("SELECT * FROM [会计科目] order by code");
   }
    
    
    
    //*****实务操作****//
    实务操作题=function(filter=1){
        //console.log(r_pid);
        select(filter) {
        	case 0 {
        	   return  db.getTable("SELECT * FROM [T_Practice_Operate] where simulate_tips is not null order by RANDOM() limit 6" ); 
        	}
        	
        	case 2{
        	   return  db.getTable("SELECT * FROM [T_Practice_Operate] where simulate_tips is not null order by id" ); 
        	}

        	else {
        	  return  db.getTable("SELECT * FROM [T_Practice_Operate] where simulate_tips is not null and pid>=0  order by RANDOM() limit 6" ); 
        	}
        }
    	
    }
    
    

    实务操作题更新=function(item){
        //console.log(r_pid);
        //console.dump(item);
        db.exec("UPDATE T_Practice_Operate SET  simulate_tips='"+item.simulate_tips+"',beizhu='"+item.beizhu+"' WHERE id = '"+item.id+"';");
    	
    }
    

    
    
    
    //****成绩保存****//
    成绩保存=function(成绩){
              //console.dump(成绩)
              import time;
    	       var t=time.now();
    	           
    	        var command = db.prepare("REPLACE INTO [T_Score] VALUES (@exam_number,@exam_time,@subject,null,@score);" ).step(  
					exam_number = 成绩["准考证号"];
					exam_time = t;
					subject=成绩["考试科目"];
					score=成绩["得分"];
				)
    }
    
    
    //****成绩查询****//
    查询成绩=function(){
    	return  db.getTable("SELECT * FROM [T_Score] order by exam_time desc" ); 
    }
    
    
    //****联系我们****//
    查询成绩=function(){
    	return  db.getTable("SELECT * FROM [联系我们] order by id" ); 
    }
    
    
   //工具
       
    标记=function(){
        import io;
        var dataT=db.getTable("SELECT * FROM [T_Practice_Operate] ");
        for(i=1;#dataT;1){
        	if(!io.exist("\data\"+dataT[i].simulate_file)){
        	   db.exec("UPDATE T_Practice_Operate SET pid = '-2' WHERE simulate_file = '"+dataT[i].simulate_file+"';");
        	}
        
        }
        
    	
    }
    
    
      更改swf=function(){
        import io;
        import string;
        var dataT=db.getTable("SELECT * FROM [T_Practice_Operate] ");
        
        for(i=1;#dataT;1){
          console.dump(dataT[i].simulate_file);
        	   db.exec("UPDATE T_Practice_Operate SET simulate_file = '"+string.replace(dataT[i].simulate_file,"swf","dll")+"' where id='"+dataT[i].id+"';");
        
        }
        
    	
    }
    
    
   不合格swf=function(){
        import fsys;
        var dataT=db.getTable("SELECT * FROM [T_Practice_Operate] where simulate_tips is  null ");
        for(i=1;#dataT;1){
            console.dump(dataT[i].simulate_file)
            //fsys.move("\data\"+dataT[i].simulate_file,"\data\不合格");
        
        }
        
    	
    }
    
    
    
    
    更新会计科目=function(){
    import string;
/*
      var dt=会计科目列表();
      for(i=1;#dt;1){
         
         //console.dump(db.getTable("SELECT * FROM [ACCOUNTMATTERSTANDARD] WHERE ACCOUNTSUBJECT like '%"+dt[i].description+"'"))
      	 //db.exec("UPDATE ACCOUNTMATTERSTANDARD SET ACCOUNTSUBJECT = '"+dt[i].code+""+dt[i].description+"' WHERE ACCOUNTSUBJECT like '%"+dt[i].description+"';");
      
      }
*/

      
      var dt=db.getTable("SELECT * FROM [ACCOUNTMATTERSTANDARD] order by ACCOUNTSUBJECT")
      for(i=1;#dt;1){
        
      	if(#db.getTable("SELECT * FROM [会计科目] where code='"+string.sub(dt[i].ACCOUNTSUBJECT,1,4)+"' ")==0){
      	    console.dump(string.sub(dt[i].ACCOUNTSUBJECT,1,4));
      		console.dump(dt[i]);
    	        var command = db.prepare("REPLACE INTO [会计科目] VALUES (@code,@descprition);" ).step(  
					code = string.sub(dt[i].ACCOUNTSUBJECT,1,4);
					descprition = string.sub(dt[i].ACCOUNTSUBJECT,5,#dt[i].ACCOUNTSUBJECT) ;

				)
      		
      	}
      
      }
      
      
      
    	
    }
     
	
	
}
