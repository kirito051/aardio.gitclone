import win.ui;
/*DSG{{*/
var winform = ..win.form(text="自动拍牌程序";right=349;bottom=249)
winform.add(
edit={cls="edit";text='~hi\r\nSHIFT+Q,Q\r\n~AAU.CN\r\nCtrl+K\r\nCtrl+K,K\xB5\xE3\xD5\xE2\xC0\xEF,\xC1\xAC\xD0\xF8\xB0\xB4\xC9\xCF\xC3\xE6\xB8\xF7\xD0\xD0\xB5\xC4\xBC\xFC:\r\n';left=19;top=16;right=341;bottom=225;edge=1;multiline=1;z=1}
)
/*}}*/

import key.hotkey; 

import inet.http;
import soImage;
import win;
var img = soImage();
import console;

//创建超级热键,必须用于窗口程序中
hotkey = key.hotkey(winform) 

findStartPoint = function(){
	import gdi;
	import mouse;
	import soImage
	import console;
	

	var img = soImage();//创建图像
	
	img.load("d:/img/gong.bmp");//加载要查找的图像
	var imgScreen = soImage();//创建图像
	imgScreen.capture(); //抓屏
	
	/*
	img.findImage(屏幕图像,x,y,x2,y2,step)
	参数x,y,x2,y2指定要查找的范围，x、y为左上角坐标,x2、y2为右下角坐标。
	step参数指定步进。
	除第一个参数以外，所有参数可选。
	*/
	
	相似度,x,y = img.findImage(imgScreen,100,100) //返回值x,y 为找到的坐标
	var xx = x ;
	var yy = y ;
	if( 相似度>80 ){
    	//相似度，为0到100之间的值，100为完全相似,0为完全不相似
    	//console.log("基础坐标：",xx,yy)
    	return xx,yy;
  		}else {
  		return 0,0;
  		}
  	
	
}


scanImageA = function(img){
	// 保存原始高宽
	var w = img.getWidth();
	var h = img.getHeight();
		
	// 要删除的点
	
// 二值化
	
	img.bpp(1);
	img.bpp(8);
	img.bpp(24);
	
	var dels = {};		
	
	
	//首先计算出各点的颜色值，避免在循环递归中重复的取
    var tcl={};
    for(i=0;w;1){
        tcl[ i ]={};
        for(j=0;h;1){
            tcl[i][j]=img.getPixel(i,j);
        }
    }
    
	// 去周边颜色值个数小于3的
	for(i=1;w-1;1){
		for(j=1;h-1;1){
			// 周围黑点个数
			var size = 0;
			// 连贯标记
			var lines = 0;
			if(tcl[i][j]==0) {
				if(tcl[i-1][j-1]==0) {
					size ++;
					lines += 1;
				}
				if(tcl[i-1][j]==0) {
					size ++;
					lines += 2;
				}
				if(tcl[i-1][j+1]==0) {
					size ++;
					lines += 4;
				}
				if(tcl[i][j-1]==0) {
					size ++;
					lines += 128;
				}
				if(tcl[i][j+1]==0) {
					size ++;
					lines += 8;
				}
				if(tcl[i+1][j-1]==0) {
					size ++;
					lines += 64;
				}
				if(tcl[i+1][j]==0) {
					size ++;
					lines += 32;
				}
				if(tcl[i+1][j+1]==0) {
					size ++;
					lines += 16;
				}
        	};
        	// 背包算法特性取连贯点 lines = 7 or lines = 14 or lines = 28 or lines = 56 or lines = 112 or lines=224 or lines = 193 or lines = 131
        	if(size<=3	 and lines != 6 and lines != 12 and lines != 24 and lines != 48 and lines != 112 and lines != 192 and lines != 174 and lines != 112){
           //	if(size<=3	 and lines != 7 and lines != 14 and lines != 28 and lines != 56 and lines != 112 and lines != 224 and lines != 193 and lines != 131){
        		// 记录要删除的点
        		table.insert(dels,{i;j});
        	}
		}	
	}
	for(i=1;#dels;1){
		// 设置成白色
		img.setPixel(dels[i][1],dels[i][2],16777215);	
	}
}
//登录，输入招标号和密码，然后登录；

//***************************************************************

hotkey.reg(
    "s","s",
    function(hwnd,...){
    import mouse;
    //需要修改用户名坐标
    var startX,startY = findStartPoint();
    mouse.clickDb(startX+450,startY+90,true)          
        ..winex.say("53039800")
      mouse.clickDb(startX+450,startY+150,true)          
        ..winex.say("53039800")
    } 
)

//----------------------------------------------------------------
hotkey.reg(
    "Q","Q",
    function(hwnd,...){
    import mouse;
    //需要修改用户名坐标
    mouse.clickDb(800,277,true)          
        ..winex.say("53039800")
    //需要修改密码坐标
     mouse.clickDb(800,333,true)
        ..winex.say("9195")
    } 
)
//*******************************
hotkey.reg(
    "V","V",
    function(hwnd,...){
    import mouse;
    //需要修改登录按钮坐标
    mouse.click(856,448,true)
   
    } 
)


hotkey.reg(
    "Z","Z", 
    function(hwnd,...){
     import soImage.directX;
       dxSnap = soImage.directX();       
       dxSnap.capture("d:/img/login.jpg", ::RECT(918,375,1022,400))
       
       //识别		
		import console;
		import tesseract;
		import win;		
		var ocr = tesseract.ocr();
		if( 0 != ocr.init("Eng","/" ) ){ //初始化样本语言包 
			var prefix = win.getenv("TESSDATA_PREFIX");
			if(!#prefix) prefix = "~\lib\tesseract\.res\"
			error("没有找到样本 " + prefix + "eng.traineddata",2)
			
		}
		
		//预设字符集可提升识别率，注意要一定在加载样本以后调用此函数
		ocr.setVariable("tessedit_char_whitelist","0123456789");
		
		//获取图像像素数据
		var pix = liblept.pixRead( ..io.fullpath("d:\img\login.jpg") );
		ocr.setImage2( pix ) 
		
		//识别图像
		if( 0 != ocr.recognize() ){
			console.pause(true,"识别图像出错");
			return;
		}
		
		var text = ocr.getText()
		console.log("识别结果",text )
		
		liblept.pixDestroy({addr pix = pix}) 
       
    } 
)
//截频验证码，并且二值化，识别


hotkey.reg(
    "A","A", 
    function(hwnd,...){
       // win.msgbox("提交")
       import soImage.directX;
       import time;
       import time.timer;
       time.timer.start("commandAA");
   
	   var startX,startY = findStartPoint();
       dxSnap1 = soImage.directX();
       dxSnap1.capture("d:/img/start.jpg", ::RECT(startX+310,startY+198-5,startX+310+305,startY+198+30))
       img.setBytes(string.load("d:/img/start.jpg") ,"*.jpg");
	   var w,h = img.getWidth(),img.getHeight();
		//scanImageA(img);
		// 去白边
		img.crop(1,1,w-1,h-1);
		img.save("d:/img/start.jpg");


       
       
		
		
		//识别		
		import console;
		import tesseract;
		import win;		

		//***************************************
		
		
var ocr = tesseract.ocr();
		if( 0 != ocr.init("chi_sim","/" ) ){ //初始化样本语言包 
			var prefix = win.getenv("TESSDATA_PREFIX");
			if(!#prefix) prefix = "~\lib\tesseract\.res\"
			error("没有找到样本 " + prefix + "chi_sim.traineddata",2)
			
		}
			//获取图像像素数据
		var pix = liblept.pixRead( ..io.fullpath("d:\img\start.jpg") );
		ocr.setImage2( pix ) 
		
		//识别图像
		if( 0 != ocr.recognize() ){
			console.pause(true,"识别图像出错2");
			return;
		}
		
		var Starttext = ocr.getText()
		console.log("验证码指示：",Starttext )		
		liblept.pixDestroy({addr pix = pix}) 
		
		
		var ocr_code = tesseract.ocr();
		if( 0 != ocr_code.init("eng","/" ) ){ //初始化样本语言包 
			var prefix = win.getenv("TESSDATA_PREFIX");
			if(!#prefix) prefix = "~\lib\tesseract\.res\"
			error("没有找到样本 " + prefix + "eng.traineddata",2)
			
		}
		//预设字符集可提升识别率，注意要一定在加载样本以后调用此函数
		ocr_code.setVariable("tessedit_char_whitelist","0123456789");
		//win.msgbox(string.indexOf(Starttext,"请输入韧位图像校验码"))
		var text="";
		if(string.indexOf(Starttext,"请输入前啦")){
		
			dxSnap = soImage.directX()        	
       		dxSnap.capture("d:/img/test.jpg", ::RECT(startX+566-32,startY+155-5,startX+566+64,startY+155+37))   //前4个       		
       		img.setBytes(string.load("d:/img/test.jpg") ,"*.jpg");
	   		var w,h = img.getWidth(),img.getHeight();
			scanImageA(img);
			// 去白边
			img.crop(1,1,w-1,h-1);
			img.save("d:/img/test2.jpg");
			//找图		
	
		
			
			//获取图像像素数据
			var pix = liblept.pixRead( ..io.fullpath("d:\img\test2.jpg") );
			ocr_code.setImage2( pix ) 
			
			//识别图像
			if( 0 != ocr_code.recognize() ){
				console.pause(true,"识别图像出错");
				return;
			}
			
			text = ocr_code.getText()
			//console.log("校验码结果:",text )			
			liblept.pixDestroy({addr pix = pix}) 
			
		
		
		}
		//win.msgbox(string.indexOf(Starttext,"请输入第倒第啦图像校验码"))
		if(string.indexOf(Starttext,"请输入第侄第啦")){
				dxSnap = soImage.directX()        	
       		 	dxSnap.capture("d:/img/test.jpg", ::RECT(startX+560+18-2,startY+155-5,startX+566+80,startY+155+37)) //中间4位     		
       			img.setBytes(string.load("d:/img/test.jpg") ,"*.jpg");
	   			var w,h = img.getWidth(),img.getHeight();
				scanImageA(img);
				// 去白边
				img.crop(1,1,w-1,h-1);
				img.save("d:/img/test2.jpg");
				//找图		
		
			
				
				//获取图像像素数据
				var pix = liblept.pixRead( ..io.fullpath("d:\img\test2.jpg") );
				ocr_code.setImage2( pix ) 
				
				//识别图像
				if( 0 != ocr_code.recognize() ){
					console.pause(true,"识别图像出错");
					return;
				}
				
				text = ocr_code.getText()
				//console.log("校验码结果:",text )			
				//liblept.pixDestroy({addr pix = pix}) 
				
		}
		if(string.indexOf(Starttext,"请输入后")){
				dxSnap = soImage.directX()        	
       			dxSnap.capture("d:/img/test.jpg", ::RECT(startX+566+32-6,startY+155-5,startX+566+96+5,startY+155+37))     //后4    		
       			img.setBytes(string.load("d:/img/test.jpg") ,"*.jpg");
	   			var w,h = img.getWidth(),img.getHeight();
				scanImageA(img);
				// 去白边
				img.crop(1,1,w-1,h-1);
				img.save("d:/img/test2.jpg");
				//找图		
		
			
				
				//获取图像像素数据
				var pix = liblept.pixRead( ..io.fullpath("d:\img\test2.jpg") );
				ocr_code.setImage2( pix ) 
				
				//识别图像
				if( 0 != ocr_code.recognize() ){
					console.pause(true,"识别图像出错");
					return;
				}
				
				text = ocr_code.getText()
				//console.log("校验码结果:",text )			
				liblept.pixDestroy({addr pix = pix}) 
		}

		ocr_code.delete();
		win.msgbox("校验码结果："+text,"本次操作时间："+time.timer.endTick("commandAA"))
		//var countTime = time.timer.endTick("commandAA");
		//console.log("校验码结果："+text,"本次操作时间：",countTime);
		//console.log("识别完成！")
		
		//sleep(2000)
		//点击确定，定的位置
		mouse.moveTo(startX+374,startY+270,true)
		//sleep(2000)
		//win.msgbox(text,"最终结果:")
/*
		import mouse;
		import win.clip;
		import key;
		win.clip.write(text);
	    mouse.click(879,443,true)
	    key.combine("CTRL","V")
	    //..winex.say(text)
	    sleep(1)
	    mouse.click(startX+374,startY+270,true)
*/
		
       
    } 
)



hotkey.reg(
    "CTRL","1", 
    function(hwnd,...){
    	import mouse;
    	import win.clip;
    	import key;
    	win.clip.EmptyClipboard();
    	//得到当前最大可接受价格，通过点击+300的按钮即可得到，方式是先点击+300按钮，然后再
    	//定位到价格文本框，选择双击复制到剪贴板，读取
    	var startX,startY = findStartPoint();
    	mouse.click(startX+505,startY+141,true);
    	sleep(10)
    	mouse.clickDb(startX+544,startY+185,true);
    	key.combine("CTRL","C");
    	var contxt = win.clip.read();
    	if(contxt==null){contxt=0}
    	var NewContxt = contxt + 200;
    	//..winex.say(tostring(NewContxt));   	
    
    	//key.press("k");
    	//win.msgbox(contxt)
    	sleep(10)
    	//点击出价按钮
    	mouse.click(startX+544+100,460,true)
    	
    } 
)

//*********************+100

hotkey.reg(
    "CTRL","2", 
    function(hwnd,...){
    	import mouse;
    	import win.clip;
    	import key;
    	win.clip.EmptyClipboard();
    	//得到当前最大可接受价格，通过点击+300的按钮即可得到，方式是先点击+300按钮，然后再
    	//定位到价格文本框，选择双击复制到剪贴板，读取
    	var startX,startY = findStartPoint();
    	mouse.click(startX+505,startY+141,true);
    	sleep(10)
    	mouse.clickDb(startX+544,startY+185,true);
    	key.combine("CTRL","C");
    	var contxt = win.clip.read();
    	if(contxt==null){contxt=0}
    	var NewContxt = contxt + 200;
    	//..winex.say(tostring(NewContxt));   	
    	win.clip.write(NewContxt);
    	key.combine("CTRL","A");
    	key.combine("CTRL","V")
    	//key.press("k");
    	//win.msgbox(contxt)
    	sleep(10)
    	//点击出价按钮
    	mouse.click(startX+544+100,460,true)
    	
    } 
)
//**********************+200

hotkey.reg(
    "CTRL","3", 
    function(hwnd,...){
    	import mouse;
    	import win.clip;
    	import key;
    	win.clip.EmptyClipboard();
    	//得到当前最大可接受价格，通过点击+300的按钮即可得到，方式是先点击+300按钮，然后再
    	//定位到价格文本框，选择双击复制到剪贴板，读取
    	mouse.click(866,415,true);
    	sleep(10)
    	mouse.clickDb(898,460,true);
    	key.combine("CTRL","C");
    	var contxt = win.clip.read();
    	if(contxt==null){contxt=0}
    	var NewContxt = contxt + 200;
    	//..winex.say(tostring(NewContxt));   	
    	win.clip.write(NewContxt);
    	key.combine("CTRL","A");
    	key.combine("CTRL","V")
    	//key.press("k");
    	//win.msgbox(contxt)
    	sleep(10)
    	//点击出价按钮
    	mouse.click(1027,460,true)
    	
    } 
)


//**********************+300

hotkey.reg(
    "CTRL","4", 
    function(hwnd,...){
    	import mouse;
    	import win.clip;
    	import key;
    	win.clip.EmptyClipboard();
    	//得到当前最大可接受价格，通过点击+300的按钮即可得到，方式是先点击+300按钮，然后再
    	//定位到价格文本框，选择双击复制到剪贴板，读取
    	mouse.click(866,415,true);
    	sleep(10)
    	mouse.clickDb(898,460,true);
    	key.combine("CTRL","C");
    	var contxt = win.clip.read();
    	if(contxt==null){contxt=0}
    	var NewContxt = contxt + 300;
    	//..winex.say(tostring(NewContxt));   	
    	win.clip.write(NewContxt);
    	key.combine("CTRL","A");
    	key.combine("CTRL","V")
    	//key.press("k");
    	//win.msgbox(contxt)
    	sleep(10)
    	//点击出价按钮
    	mouse.click(1027,460,true)
    	
    } 
)

  
//可选指定下面的触发器函数, 当用户按下部份热键、并有一个或多个可能的候选键时触发
import win.util.tray;
hotkey.waitproc = function( hwnd,tenter,twait ){
    if(!tenter){
        win.util.tray.pop()
        return;
    }  
    win.util.tray.pop(
        '已按下:' 
        + ..string.join(tenter,"+")  
        + ' 等待候选键:' 
        + ..string.join(twait,",") 
        ,"超级热键模式已启动"
    )
} 

winform.wndproc = function(hwnd,message,wparam,lparam){
    select(message) {
        //最小化到托盘
        case( 0x112/*_WM_SYSCOMMAND*/ ){ //系统命令消息
            if( wparam == 0xF020/*_SC_MINIMIZE*/ ){ //用户点击了最小化按钮
                import win.util.tray
                tray = win.util.tray(winform)
                winform.show(false);
                tray.message = 0x400+9981/*_WM_TRAYMESSAGE*/ //设置托盘图标回调消息
                tray.pop("自动拍牌程序","请勿关闭！",2)
                return true;//阻击默认消息传递，取消最小化过程
            }
        }
        //托盘点击事件
        case (0x400+9981/*_WM_TRAYMESSAGE*/){
            if(lparam=0x0202){
                winform.show(true)
                tray.delete()
            }
        }
    	
    }
}



winform.show() ;


//-----------------------------------------------------------

win.loopMessage();
